/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBidOfferAcceptancesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Bid Offer Acceptances Market-wide
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse BalancingAcceptancesAllGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Acceptances Market-wide
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesAllGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Bid Offer Acceptances Per-BMU
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse BalancingAcceptancesGet(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Acceptances Per-BMU
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesGetWithHttpInfo(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBidOfferAcceptancesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Bid Offer Acceptances Market-wide
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesAllGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Acceptances Market-wide
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>> BalancingAcceptancesAllGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bid Offer Acceptances Per-BMU
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesGetAsync(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Acceptances Per-BMU
        /// </summary>
        /// <remarks>
        /// This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>> BalancingAcceptancesGetWithHttpInfoAsync(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBidOfferAcceptancesApi : IBidOfferAcceptancesApiSync, IBidOfferAcceptancesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BidOfferAcceptancesApi : IBidOfferAcceptancesApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BidOfferAcceptancesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BidOfferAcceptancesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BidOfferAcceptancesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BidOfferAcceptancesApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BidOfferAcceptancesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BidOfferAcceptancesApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BidOfferAcceptancesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public BidOfferAcceptancesApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Bid Offer Acceptances Market-wide This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse BalancingAcceptancesAllGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> localVarResponse = BalancingAcceptancesAllGetWithHttpInfo(settlementDate, settlementPeriod, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptances Market-wide This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesAllGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "BidOfferAcceptancesApi.BalancingAcceptancesAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>("/balancing/acceptances/all", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("BalancingAcceptancesAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptances Market-wide This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesAllGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> localVarResponse = await BalancingAcceptancesAllGetWithHttpInfoAsync(settlementDate, settlementPeriod, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptances Market-wide This endpoint provides the bid offer acceptance data (BOAL) for multiple requested BMUs or all BMUs.  It returns the data valid for a single settlement period.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.    All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Note: When a settlementPeriod is supplied, the settlementDate parameter is treated as a Date only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.    Some examples of date parameter combinations are shown below.                Filtering by settlement date and period:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24&amp;settlementPeriod&#x3D;39                Filtering by datetime:                    /balancing/acceptances/all?settlementDate&#x3D;2023-01-24T19:00Z
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime for the filter.</param>
        /// <param name="settlementPeriod">The settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM Units to query. Elexon or NGC BMU IDs can be used. If omitted, results for all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>> BalancingAcceptancesAllGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "BidOfferAcceptancesApi.BalancingAcceptancesAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>("/balancing/acceptances/all", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("BalancingAcceptancesAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptances Per-BMU This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse BalancingAcceptancesGet(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> localVarResponse = BalancingAcceptancesGetWithHttpInfo(bmUnit, from, to, settlementPeriodFrom, settlementPeriodTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptances Per-BMU This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesGetWithHttpInfo(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'bmUnit' is set
            if (bmUnit == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'bmUnit' when calling BidOfferAcceptancesApi->BalancingAcceptancesGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bmUnit", bmUnit));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "BidOfferAcceptancesApi.BalancingAcceptancesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>("/balancing/acceptances", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("BalancingAcceptancesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptances Per-BMU This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> BalancingAcceptancesGetAsync(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse> localVarResponse = await BalancingAcceptancesGetWithHttpInfoAsync(bmUnit, from, to, settlementPeriodFrom, settlementPeriodTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptances Per-BMU This endpoint provides the bid offer acceptance data (BOAL) for a requested BMU.                By default, the from and to parameters filter the data by start time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of start time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /balancing/acceptances?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bmUnit">The BM Unit to query.</param>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>> BalancingAcceptancesGetWithHttpInfoAsync(string bmUnit, DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'bmUnit' is set
            if (bmUnit == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'bmUnit' when calling BidOfferAcceptancesApi->BalancingAcceptancesGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bmUnit", bmUnit));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "BidOfferAcceptancesApi.BalancingAcceptancesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesBalancingBidOfferAcceptancesResponse>("/balancing/acceptances", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("BalancingAcceptancesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
