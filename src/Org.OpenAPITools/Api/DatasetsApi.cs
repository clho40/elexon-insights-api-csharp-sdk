/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDatasetsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720)
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow DatasetsABUCGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720)
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow DatasetsAGPTGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow DatasetsAGWSGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow DatasetsATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse DatasetsB1610Get(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610GetWithHttpInfo(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610StreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610StreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse DatasetsBOALFGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Bid Offer Data (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse DatasetsBODGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Data (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Bid Offer Data Stream (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Bid Offer Data Stream (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Cost of Congestion Management (CCM / B1330)
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow DatasetsCCMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330)
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Credit Default Notice (CDN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse DatasetsCDNGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Credit Default Notice (CDN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Credit Default Notice (CDN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0);

        /// <summary>
        /// Credit Default Notice (CDN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow DatasetsDAGGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow DatasetsDATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Demand Control Instruction (DCI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow DatasetsDCIGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand Control Instruction (DCI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand Control Instruction (DCI) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand Control Instruction (DCI) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow DatasetsDGWSGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData DatasetsDISBSADGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0);

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0);
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily DatasetsFOU2T14DGet(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> DatasetsFOU2T14DGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly DatasetsFOU2T3YWGet(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> DatasetsFOU2T3YWGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// System Frequency (FREQ)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency DatasetsFREQGet(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// System Frequency (FREQ)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQGetWithHttpInfo(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// System Frequency (FREQ) stream
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQStreamGet(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// System Frequency (FREQ) stream
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQStreamGetWithHttpInfo(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData DatasetsFUELHHGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData DatasetsFUELINSTGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410)
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow DatasetsIGCAGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410)
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance DatasetsIMBALNGCGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand DatasetsINDDEMGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration DatasetsINDGENGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow DatasetsINDODGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Initial National Demand Outturn data (INDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational DatasetsINDOGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Initial National Demand Outturn data (INDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> DatasetsINDOGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission DatasetsITSDOGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> DatasetsITSDOGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM)
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData DatasetsLOLPDRMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM)
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640)
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow DatasetsMATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640)
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Maximum Delivery Period (MDP)
        /// </summary>
        /// <remarks>
        /// Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData DatasetsMDPGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Maximum Delivery Period (MDP)
        /// </summary>
        /// <remarks>
        /// Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Maximum Delivery Period Stream (MDP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Maximum Delivery Period Stream (MDP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Maximum Delivery Volume (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData DatasetsMDVGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Maximum Delivery Volume (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Maximum Delivery Volume Stream (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin DatasetsMELNGCGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Maximum Export Limit (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData DatasetsMELSGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Maximum Export Limit (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Maximum Export Limit Stream (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Maximum Export Limit Stream (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Market Index Data (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse DatasetsMIDGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Market Index Data (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Market Index Data Stream (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Market Index Data Stream (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Maximum Import Limit (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData DatasetsMILSGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Maximum Import Limit (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Maximum Import Limit Stream (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Maximum Import Limit Stream (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Minimum Non-Zero Time (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData DatasetsMNZTGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Minimum Non-Zero Time (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Minimum Zero Time (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData DatasetsMZTGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Minimum Zero Time (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Minimum Zero Time Stream (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Minimum Zero Time Stream (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Returns the time when each dataset was last updated
        /// </summary>
        /// <remarks>
        /// Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow DatasetsMetadataLatestGet(string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Returns the time when each dataset was last updated
        /// </summary>
        /// <remarks>
        /// Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> DatasetsMetadataLatestGetWithHttpInfo(string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily DatasetsNDFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead DatasetsNDFGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly DatasetsNDFWGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deviate from Zero (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNDZGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deviate from Zero (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData DatasetsNETBSADGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0);

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0);
        /// <summary>
        /// Non-BM STOR (NONBM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData DatasetsNONBMGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Non-BM STOR (NONBM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Non-BM STOR (NONBM) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Non-BM STOR (NONBM) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily DatasetsNOU2T14DGet(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> DatasetsNOU2T14DGetWithHttpInfo(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly DatasetsNOU2T3YWGet(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> DatasetsNOU2T3YWGetWithHttpInfo(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deliver Bids (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNTBGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deliver Bids (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deliver Bids Stream (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deliver Offers (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNTOGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deliver Offers (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Notice to Deliver Offers Stream (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly DatasetsOCNMF3Y2Get(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2GetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2StreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2StreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly DatasetsOCNMF3YGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily DatasetsOCNMFD2Get(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2GetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2StreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2StreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily DatasetsOCNMFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Physical Notifications (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData DatasetsPNGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Physical Notifications (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Physical Notifications Stream (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Physical Notifications Stream (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Balancing Services Volume (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData DatasetsQASGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Balancing Services Volume (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Balancing Services Volume Stream (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Balancing Services Volume Stream (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Quiescent Physical Notifications (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData DatasetsQPNGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Quiescent Physical Notifications (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Run Down Rate Export (RDRE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRDREGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Run Down Rate Export (RDRE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Run Down Rate Export (RDRE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Run Down Rate Import (RDRI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRDRIGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Run Down Rate Import (RDRI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Run Down Rate Import (RDRI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT)
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage DatasetsREMITGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT)
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Run Up Rate Export (RURE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRUREGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Run Up Rate Export (RURE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Run Up Rate Export (RURE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Run Up Rate Export (RURE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Run Up Rate Import (RURI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRURIGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Run Up Rate Import (RURI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Run Up Rate Import (RURI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Run Up Rate Import (RURI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Stable Export Limit (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData DatasetsSELGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Stable Export Limit (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Stable Export Limit Stream (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Stable Export Limit Stream (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Stable Import Limit (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData DatasetsSILGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Stable Import Limit (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Stable Import Limit Stream (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Stable Import Limit Stream (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// System Warnings (SYSWARN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData DatasetsSYSWARNGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// System Warnings (SYSWARN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// System Warnings (SYSWARN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// System Warnings (SYSWARN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Temperature Data (TEMP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData DatasetsTEMPGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Temperature Data (TEMP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> DatasetsTEMPGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD)
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily DatasetsTSDFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD)
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead DatasetsTSDFGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly DatasetsTSDFWGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily DatasetsUOU2T14DGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DStreamGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DStreamGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly DatasetsUOU2T3YWGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWStreamGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWStreamGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow DatasetsWATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast DatasetsWINDFORGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);

        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0);
        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow DatasetsYAFMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow DatasetsYATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDatasetsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720)
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720)
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>>> DatasetsABUCStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>>> DatasetsAGPTStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>>> DatasetsAGWSStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>>> DatasetsATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610GetAsync(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610GetWithHttpInfoAsync(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610StreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>>> DatasetsB1610StreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>>> DatasetsBOALFStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bid Offer Data (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Data (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bid Offer Data Stream (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bid Offer Data Stream (BOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>>> DatasetsBODStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Cost of Congestion Management (CCM / B1330)
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330)
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>>> DatasetsCCMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Credit Default Notice (CDN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Credit Default Notice (CDN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Credit Default Notice (CDN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Credit Default Notice (CDN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>>> DatasetsCDNStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>>> DatasetsDAGStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsDATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand Control Instruction (DCI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand Control Instruction (DCI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand Control Instruction (DCI) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand Control Instruction (DCI) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides demand control instruction data, filtered by publish time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>>> DatasetsDCIStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440)
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>>> DatasetsDGWSStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>>> DatasetsDISBSADStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> DatasetsFOU2T14DGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily>> DatasetsFOU2T14DGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> DatasetsFOU2T3YWGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly>> DatasetsFOU2T3YWGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// System Frequency (FREQ)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQGetAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// System Frequency (FREQ)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQGetWithHttpInfoAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// System Frequency (FREQ) stream
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQStreamGetAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// System Frequency (FREQ) stream
        /// </summary>
        /// <remarks>
        /// The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>>> DatasetsFREQStreamGetWithHttpInfoAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>> DatasetsFUELHHStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>> DatasetsFUELINSTStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410)
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410)
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>>> DatasetsIGCAStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>>> DatasetsIMBALNGCStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>>> DatasetsINDDEMStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>>> DatasetsINDGENStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>>> DatasetsINDODStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Initial National Demand Outturn data (INDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> DatasetsINDOGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Initial National Demand Outturn data (INDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational>> DatasetsINDOGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> DatasetsITSDOGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO)
        /// </summary>
        /// <remarks>
        /// The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission>> DatasetsITSDOGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM)
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM)
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream
        /// </summary>
        /// <remarks>
        /// The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>>> DatasetsLOLPDRMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640)
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640)
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsMATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Delivery Period (MDP)
        /// </summary>
        /// <remarks>
        /// Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Delivery Period (MDP)
        /// </summary>
        /// <remarks>
        /// Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Delivery Period Stream (MDP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Delivery Period Stream (MDP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>>> DatasetsMDPStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Delivery Volume (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Delivery Volume (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Delivery Volume Stream (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>>> DatasetsMDVStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>>> DatasetsMELNGCStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Export Limit (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Export Limit (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Export Limit Stream (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Export Limit Stream (MELS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>> DatasetsMELSStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Market Index Data (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Market Index Data (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Market Index Data Stream (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Market Index Data Stream (MID)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>>> DatasetsMIDStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Import Limit (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Import Limit (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Maximum Import Limit Stream (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Maximum Import Limit Stream (MILS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>> DatasetsMILSStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Minimum Non-Zero Time (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Minimum Non-Zero Time (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>> DatasetsMNZTStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Minimum Zero Time (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Minimum Zero Time (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Minimum Zero Time Stream (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Minimum Zero Time Stream (MZT)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>> DatasetsMZTStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns the time when each dataset was last updated
        /// </summary>
        /// <remarks>
        /// Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> DatasetsMetadataLatestGetAsync(string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns the time when each dataset was last updated
        /// </summary>
        /// <remarks>
        /// Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow>> DatasetsMetadataLatestGetWithHttpInfoAsync(string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>>> DatasetsNDFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>>> DatasetsNDFStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>>> DatasetsNDFWStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deviate from Zero (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deviate from Zero (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNDZStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>>> DatasetsNETBSADStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Non-BM STOR (NONBM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Non-BM STOR (NONBM)
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Non-BM STOR (NONBM) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Non-BM STOR (NONBM) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>>> DatasetsNONBMStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> DatasetsNOU2T14DGetAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily>> DatasetsNOU2T14DGetWithHttpInfoAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> DatasetsNOU2T3YWGetAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly>> DatasetsNOU2T3YWGetWithHttpInfoAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deliver Bids (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deliver Bids (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deliver Bids Stream (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNTBStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deliver Offers (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deliver Offers (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Notice to Deliver Offers Stream (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNTOStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2GetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2GetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2StreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>>> DatasetsOCNMF3Y2StreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>>> DatasetsOCNMF3YStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2GetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2GetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2StreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>>> DatasetsOCNMFD2StreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD)
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream
        /// </summary>
        /// <remarks>
        /// The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>>> DatasetsOCNMFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Physical Notifications (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Physical Notifications (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Physical Notifications Stream (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Physical Notifications Stream (PN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>> DatasetsPNStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Balancing Services Volume (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Balancing Services Volume (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Balancing Services Volume Stream (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Balancing Services Volume Stream (QAS)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>>> DatasetsQASStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Quiescent Physical Notifications (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Quiescent Physical Notifications (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>> DatasetsQPNStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Down Rate Export (RDRE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Down Rate Export (RDRE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Down Rate Export (RDRE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRDREStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Down Rate Import (RDRI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Down Rate Import (RDRI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Down Rate Import (RDRI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRDRIStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT)
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT)
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream
        /// </summary>
        /// <remarks>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>>> DatasetsREMITStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Up Rate Export (RURE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Up Rate Export (RURE)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Up Rate Export (RURE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Up Rate Export (RURE) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRUREStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Up Rate Import (RURI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Up Rate Import (RURI)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Run Up Rate Import (RURI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Run Up Rate Import (RURI) Stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRURIStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Stable Export Limit (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Stable Export Limit (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Stable Export Limit Stream (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Stable Export Limit Stream (SEL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>> DatasetsSELStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Stable Import Limit (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Stable Import Limit (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Stable Import Limit Stream (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Stable Import Limit Stream (SIL)
        /// </summary>
        /// <remarks>
        /// This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>> DatasetsSILStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// System Warnings (SYSWARN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// System Warnings (SYSWARN)
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// System Warnings (SYSWARN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// System Warnings (SYSWARN) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides system warnings data
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>>> DatasetsSYSWARNStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Temperature Data (TEMP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> DatasetsTEMPGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Temperature Data (TEMP)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData>> DatasetsTEMPGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD)
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD)
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream
        /// </summary>
        /// <remarks>
        /// This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>>> DatasetsTSDFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>>> DatasetsTSDFStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW)
        /// </summary>
        /// <remarks>
        /// This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>>> DatasetsTSDFWStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DStreamGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D)
        /// </summary>
        /// <remarks>
        /// This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>>> DatasetsUOU2T14DStreamGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWStreamGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW)
        /// </summary>
        /// <remarks>
        /// This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>>> DatasetsUOU2T3YWStreamGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630)
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsWATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Wind Generation Forecast (WINDFOR)
        /// </summary>
        /// <remarks>
        /// This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>>> DatasetsWINDFORStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>>> DatasetsYAFMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650)
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsYATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDatasetsApi : IDatasetsApiSync, IDatasetsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DatasetsApi : IDatasetsApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DatasetsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DatasetsApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DatasetsApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DatasetsApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow DatasetsABUCGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> localVarResponse = DatasetsABUCGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsABUCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>("/datasets/ABUC", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsABUCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> localVarResponse = await DatasetsABUCGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) This endpoint provides amount of balancing reserves under contract data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsABUCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>("/datasets/ABUC", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsABUCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow> DatasetsABUCStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> localVarResponse = DatasetsABUCStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsABUCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>>("/datasets/ABUC/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsABUCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> DatasetsABUCStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>> localVarResponse = await DatasetsABUCStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Amount Of Balancing Reserves Under Contract (ABUC / B1720) stream This endpoint provides amount of balancing reserves under contract data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>>> DatasetsABUCStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsABUCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>>("/datasets/ABUC/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsABUCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow DatasetsAGPTGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> localVarResponse = DatasetsAGPTGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGPTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>("/datasets/AGPT", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGPTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> localVarResponse = await DatasetsAGPTGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and provides a maximum data output range of 4 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGPTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>("/datasets/AGPT", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGPTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow> DatasetsAGPTStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> localVarResponse = DatasetsAGPTStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGPTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>>("/datasets/AGPT/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGPTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> DatasetsAGPTStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>> localVarResponse = await DatasetsAGPTStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Aggregated Generation Per Type (AGPT / B1620) stream This endpoint provides actual generation data per settlement period aggregated by Power System Resource type (Fuel Type categories as defined by Commission Regulation (EU) No 543/2013).                This endpoint filters by publishTime and has an optimised JSON payload aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>>> DatasetsAGPTStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGPTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>>("/datasets/AGPT/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGPTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow DatasetsAGWSGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> localVarResponse = DatasetsAGWSGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGWSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>("/datasets/AGWS", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGWSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> localVarResponse = await DatasetsAGWSGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGWSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>("/datasets/AGWS", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGWSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow> DatasetsAGWSStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> localVarResponse = DatasetsAGWSStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGWSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>>("/datasets/AGWS/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGWSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> DatasetsAGWSStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>> localVarResponse = await DatasetsAGWSStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Or Estimated Wind And Solar Power Generation (AGWS / B1630) stream This endpoint provides actual or estimated wind and solar power generation  per settlement period. It returns generation with Power System Resource type  Solar, Wind Onshore or Wind Offshore (Fuel Type categories as defined by  Commission Regulation (EU) No 543/2013).                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>>> DatasetsAGWSStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsAGWSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>>("/datasets/AGWS/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsAGWSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow DatasetsATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> localVarResponse = DatasetsATLGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>("/datasets/ATL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> localVarResponse = await DatasetsATLGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) This endpoint provides actual total load per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>("/datasets/ATL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow> DatasetsATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = DatasetsATLStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>>("/datasets/ATL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> DatasetsATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = await DatasetsATLStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Total Load Per Bidding Zone (ATL / B0610) stream This endpoint provides actual total load per bidding zone data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>>> DatasetsATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>>("/datasets/ATL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse DatasetsB1610Get(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> localVarResponse = DatasetsB1610GetWithHttpInfo(settlementDate, settlementPeriod, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610GetWithHttpInfo(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsB1610Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>("/datasets/B1610", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsB1610Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610GetAsync(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> localVarResponse = await DatasetsB1610GetWithHttpInfoAsync(settlementDate, settlementPeriod, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate"></param>
        /// <param name="settlementPeriod"></param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610GetWithHttpInfoAsync(DateTime settlementDate, int settlementPeriod, List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsB1610Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>("/datasets/B1610", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsB1610Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse> DatasetsB1610StreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> localVarResponse = DatasetsB1610StreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610StreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsB1610StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>>("/datasets/B1610/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsB1610StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> DatasetsB1610StreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>> localVarResponse = await DatasetsB1610StreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Actual Generation Output Per Generation Unit (B1610) stream This endpoint provides the actual generation output (MW) per Settlement Period and per generation unit of 100 MW or more installed generation capacity.                The information is published five days after the end of the operational period.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>>> DatasetsB1610StreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsB1610StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>>("/datasets/B1610/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsB1610StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse DatasetsBOALFGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> localVarResponse = DatasetsBOALFGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBOALFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>("/datasets/BOALF", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBOALFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> localVarResponse = await DatasetsBOALFGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBOALFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>("/datasets/BOALF", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBOALFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse> DatasetsBOALFStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> localVarResponse = DatasetsBOALFStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBOALFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>>("/datasets/BOALF/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBOALFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> DatasetsBOALFStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>> localVarResponse = await DatasetsBOALFStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Acceptance Level Flagged Stream (BOALF) This endpoint provides bid offer acceptance data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/boalf/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>>> DatasetsBOALFStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBOALFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>>("/datasets/BOALF/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBOALFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Data (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse DatasetsBODGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> localVarResponse = DatasetsBODGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Data (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBODGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>("/datasets/BOD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBODGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Data (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> localVarResponse = await DatasetsBODGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Data (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from a datetime to a datetime                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from a datetime to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from a settlement date and period to a datetime:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from a settlement date and period to a settlement date and period:                    /datasets/bod?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBODGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>("/datasets/BOD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBODGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Data Stream (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse> DatasetsBODStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> localVarResponse = DatasetsBODStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Data Stream (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBODStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>>("/datasets/BOD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBODStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bid Offer Data Stream (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> DatasetsBODStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>> localVarResponse = await DatasetsBODStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bid Offer Data Stream (BOD) This endpoint provides bid-offer data.                By default, the from and to parameters filter the data inclusively and this endpoint will return any data where  TimeFrom is within the requested time range. If the settlementPeriodFrom or settlementPeriodTo parameters are  provided, it will instead filter to return any data where TimeFrom is within the specified range of settlement  periods. It is possible to search using a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored.  For example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from datetime to datetime                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from datetime to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to datetime:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/bod/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>>> DatasetsBODStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsBODStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>>("/datasets/BOD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsBODStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow DatasetsCCMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> localVarResponse = DatasetsCCMGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCCMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>("/datasets/CCM", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCCMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> localVarResponse = await DatasetsCCMGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) This endpoint provides cost of congestion management data.    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCCMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>("/datasets/CCM", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCCMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow> DatasetsCCMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> localVarResponse = DatasetsCCMStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCCMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>>("/datasets/CCM/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCCMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> DatasetsCCMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>> localVarResponse = await DatasetsCCMStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cost of Congestion Management (CCM / B1330) stream This endpoint provides cost of congestion management data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>>> DatasetsCCMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCCMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>>("/datasets/CCM/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCCMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Credit Default Notice (CDN) This endpoint provides CDN Index Data received from EC.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse DatasetsCDNGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> localVarResponse = DatasetsCDNGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, bscPartyId, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Credit Default Notice (CDN) This endpoint provides CDN Index Data received from EC.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (bscPartyId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bscPartyId", bscPartyId));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCDNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>("/datasets/CDN", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCDNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Credit Default Notice (CDN) This endpoint provides CDN Index Data received from EC.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> localVarResponse = await DatasetsCDNGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, bscPartyId, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Credit Default Notice (CDN) This endpoint provides CDN Index Data received from EC.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (bscPartyId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bscPartyId", bscPartyId));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCDNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>("/datasets/CDN", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCDNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Credit Default Notice (CDN) stream This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse> DatasetsCDNStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> localVarResponse = DatasetsCDNStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, bscPartyId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Credit Default Notice (CDN) stream This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (bscPartyId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bscPartyId", bscPartyId));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCDNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>>("/datasets/CDN/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCDNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Credit Default Notice (CDN) stream This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> DatasetsCDNStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>> localVarResponse = await DatasetsCDNStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, bscPartyId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Credit Default Notice (CDN) stream This endpoint provides CDN Index Data received from EC.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the CDN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="bscPartyId"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>>> DatasetsCDNStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? bscPartyId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (bscPartyId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bscPartyId", bscPartyId));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsCDNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>>("/datasets/CDN/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsCDNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow DatasetsDAGGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> localVarResponse = DatasetsDAGGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDAGGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>("/datasets/DAG", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDAGGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> localVarResponse = await DatasetsDAGGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) This endpoint provides day-ahead aggregated generation data.                It has a maximum date range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDAGGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>("/datasets/DAG", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDAGGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow> DatasetsDAGStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> localVarResponse = DatasetsDAGStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDAGStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>>("/datasets/DAG/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDAGStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> DatasetsDAGStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>> localVarResponse = await DatasetsDAGStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Aggregated Generation (DAG / B1430) stream This endpoint provides day-ahead aggregated generation data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>>> DatasetsDAGStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDAGStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>>("/datasets/DAG/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDAGStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow DatasetsDATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = DatasetsDATLGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/DATL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = await DatasetsDATLGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) This endpoint provides day-ahead total load forecast per bidding zone data.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/DATL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsDATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = DatasetsDATLStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/DATL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsDATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = await DatasetsDATLStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Total Load Forecast Per Bidding Zone (DATL / B0620) stream This endpoint provides day-ahead total load forecast per bidding zone data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsDATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/DATL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow DatasetsDCIGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> localVarResponse = DatasetsDCIGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDCIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>("/datasets/DCI", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDCIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> localVarResponse = await DatasetsDCIGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDCIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>("/datasets/DCI", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDCIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) stream This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow> DatasetsDCIStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> localVarResponse = DatasetsDCIStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) stream This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDCIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>>("/datasets/DCI/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDCIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) stream This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> DatasetsDCIStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>> localVarResponse = await DatasetsDCIStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand Control Instruction (DCI) stream This endpoint provides demand control instruction data, filtered by publish time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>>> DatasetsDCIStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDCIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>>("/datasets/DCI/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDCIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow DatasetsDGWSGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> localVarResponse = DatasetsDGWSGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDGWSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>("/datasets/DGWS", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDGWSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> localVarResponse = await DatasetsDGWSGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) This endpoint provides day-ahead generation data for wind and solar.    This API endpoint provides a maximum data output range of 7 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDGWSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>("/datasets/DGWS", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDGWSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow> DatasetsDGWSStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> localVarResponse = DatasetsDGWSStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDGWSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>>("/datasets/DGWS/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDGWSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> DatasetsDGWSStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>> localVarResponse = await DatasetsDGWSStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day-Ahead Generation For Wind And Solar (DGWS / B1440) stream This endpoint provides day-ahead generation data for wind and solar.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>>> DatasetsDGWSStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDGWSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>>("/datasets/DGWS/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDGWSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData DatasetsDISBSADGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> localVarResponse = DatasetsDISBSADGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDISBSADGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>("/datasets/DISBSAD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDISBSADGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> localVarResponse = await DatasetsDISBSADGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDISBSADGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>("/datasets/DISBSAD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDISBSADGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData> DatasetsDISBSADStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> localVarResponse = DatasetsDISBSADStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDISBSADStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>>("/datasets/DISBSAD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDISBSADStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> DatasetsDISBSADStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>> localVarResponse = await DatasetsDISBSADStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disaggregated Balancing Services Adjustment Data (DISBSAD) stream This endpoint provides Disaggregated Balancing Services Adjustment data received from NGESO.                Disaggregated Balancing Services Adjustment data covers a set of adjustment actions, cost and volume values  for each Settlement Period. Adjustment costs are shown in £. Adjustment volumes are shown in MWh.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/disbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for DISBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>>> DatasetsDISBSADStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsDISBSADStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>>("/datasets/DISBSAD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsDISBSADStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily DatasetsFOU2T14DGet(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> localVarResponse = DatasetsFOU2T14DGetWithHttpInfo(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, biddingZone, interconnector, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> DatasetsFOU2T14DGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (biddingZone != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "biddingZone", biddingZone));
            }
            if (interconnector != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "interconnector", interconnector));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily>("/datasets/FOU2T14D", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> DatasetsFOU2T14DGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily> localVarResponse = await DatasetsFOU2T14DGetWithHttpInfoAsync(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, biddingZone, interconnector, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Fuel Type (FOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead; it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily>> DatasetsFOU2T14DGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (biddingZone != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "biddingZone", biddingZone));
            }
            if (interconnector != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "interconnector", interconnector));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily>("/datasets/FOU2T14D", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly DatasetsFOU2T3YWGet(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> localVarResponse = DatasetsFOU2T3YWGetWithHttpInfo(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, biddingZone, interconnector, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> DatasetsFOU2T3YWGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (week != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "week", week));
            }
            if (year != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "year", year));
            }
            if (biddingZone != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "biddingZone", biddingZone));
            }
            if (interconnector != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "interconnector", interconnector));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly>("/datasets/FOU2T3YW", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> DatasetsFOU2T3YWGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly> localVarResponse = await DatasetsFOU2T3YWGetWithHttpInfoAsync(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, biddingZone, interconnector, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Fuel Type (FOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead;  it is aggregated by Fuel Types categories.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="biddingZone"> (optional)</param>
        /// <param name="interconnector"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly>> DatasetsFOU2T3YWGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), List<string>? biddingZone = default(List<string>?), bool? interconnector = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (week != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "week", week));
            }
            if (year != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "year", year));
            }
            if (biddingZone != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "biddingZone", biddingZone));
            }
            if (interconnector != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "interconnector", interconnector));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly>("/datasets/FOU2T3YW", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Frequency (FREQ) The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency DatasetsFREQGet(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> localVarResponse = DatasetsFREQGetWithHttpInfo(measurementDateTimeFrom, measurementDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Frequency (FREQ) The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQGetWithHttpInfo(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (measurementDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeFrom", measurementDateTimeFrom));
            }
            if (measurementDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeTo", measurementDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFREQGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>("/datasets/FREQ", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFREQGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Frequency (FREQ) The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQGetAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> localVarResponse = await DatasetsFREQGetWithHttpInfoAsync(measurementDateTimeFrom, measurementDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Frequency (FREQ) The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.                A maximum limit of 24 hours is applied to this endpoint to limit response size. Use the streaming version  for larger response sizes.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQGetWithHttpInfoAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (measurementDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeFrom", measurementDateTimeFrom));
            }
            if (measurementDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeTo", measurementDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFREQGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>("/datasets/FREQ", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFREQGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Frequency (FREQ) stream The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        public List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency> DatasetsFREQStreamGet(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> localVarResponse = DatasetsFREQStreamGetWithHttpInfo(measurementDateTimeFrom, measurementDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Frequency (FREQ) stream The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQStreamGetWithHttpInfo(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (measurementDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeFrom", measurementDateTimeFrom));
            }
            if (measurementDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeTo", measurementDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFREQStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>>("/datasets/FREQ/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFREQStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Frequency (FREQ) stream The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> DatasetsFREQStreamGetAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>> localVarResponse = await DatasetsFREQStreamGetWithHttpInfoAsync(measurementDateTimeFrom, measurementDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Frequency (FREQ) stream The endpoint provides data that has been received every 2 minutes the Transmission System Frequency, expressed as a hertz value for one or more spot times within that 2 minute period.  The default output will be the latest published data.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the system frequency data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="measurementDateTimeFrom"> (optional)</param>
        /// <param name="measurementDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>>> DatasetsFREQStreamGetWithHttpInfoAsync(DateTime? measurementDateTimeFrom = default(DateTime?), DateTime? measurementDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (measurementDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeFrom", measurementDateTimeFrom));
            }
            if (measurementDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "measurementDateTimeTo", measurementDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFREQStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>>("/datasets/FREQ/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFREQStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData DatasetsFUELHHGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> localVarResponse = DatasetsFUELHHGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELHHGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>("/datasets/FUELHH", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELHHGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> localVarResponse = await DatasetsFUELHHGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELHHGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>("/datasets/FUELHH", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELHHGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELHHStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> localVarResponse = DatasetsFUELHHStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELHHStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>("/datasets/FUELHH/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELHHStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELHHStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> localVarResponse = await DatasetsFUELHHStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Half-hourly generation outturn by fuel type (FUELHH) stream This endpoint provides the half-hourly generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at 30-minute intervals with  average MW values over 30 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the half-hourly generation outturn by fuel type (FUELHH) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>> DatasetsFUELHHStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELHHStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>("/datasets/FUELHH/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELHHStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData DatasetsFUELINSTGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> localVarResponse = DatasetsFUELINSTGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELINSTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>("/datasets/FUELINST", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELINSTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> localVarResponse = await DatasetsFUELINSTGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELINSTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>("/datasets/FUELINST", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELINSTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData> DatasetsFUELINSTStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> localVarResponse = DatasetsFUELINSTStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELINSTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>("/datasets/FUELINST/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELINSTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> DatasetsFUELINSTStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>> localVarResponse = await DatasetsFUELINSTStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Instantaneous generation outturn by fuel type (FUELINST) stream This endpoint provides the instantaneous generation outturn (Generation By Fuel type)  to give our users an indication of the generation outturn for Great Britain.  The data is aggregated by Fuel Type category and updated at five-minute intervals  with average MW values over 5 minutes for each category.                This endpoint includes additional Settlement parameters such as Settlement Dates and Settlement Period.  The Settlement Date fields cannot be set when a Publish Date field is set.                Settlement date parameters must be provided in the exact format yyyy-MM-dd.    This endpoint has an optimised JSON payload and is aimed at frequent requests for instantaneous generation outturn by fuel type (FUELINST) data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="settlementDateFrom"> (optional)</param>
        /// <param name="settlementDateTo"> (optional)</param>
        /// <param name="settlementPeriod">List of Settlement Periods (optional)</param>
        /// <param name="fuelType">Fuel Type e.g. NUCLEAR (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>> DatasetsFUELINSTStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), DateTime? settlementDateFrom = default(DateTime?), DateTime? settlementDateTo = default(DateTime?), List<int>? settlementPeriod = default(List<int>?), List<string>? fuelType = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (settlementDateFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateFrom", settlementDateFrom));
            }
            if (settlementDateTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDateTo", settlementDateTo));
            }
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "settlementPeriod", settlementPeriod));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsFUELINSTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>("/datasets/FUELINST/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsFUELINSTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow DatasetsIGCAGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> localVarResponse = DatasetsIGCAGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIGCAGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>("/datasets/IGCA", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIGCAGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> localVarResponse = await DatasetsIGCAGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) This endpoint provides installed generation capacity aggregated data.    This API endpoint provides a maximum data output range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIGCAGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>("/datasets/IGCA", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIGCAGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow> DatasetsIGCAStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> localVarResponse = DatasetsIGCAStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIGCAStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>>("/datasets/IGCA/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIGCAStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> DatasetsIGCAStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>> localVarResponse = await DatasetsIGCAStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Installed Generation Capacity Aggregated (IGCA / B1410) stream This endpoint provides installed generation capacity aggregated data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>>> DatasetsIGCAStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIGCAStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>>("/datasets/IGCA/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIGCAStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC) This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance DatasetsIMBALNGCGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> localVarResponse = DatasetsIMBALNGCGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC) This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIMBALNGCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>("/datasets/IMBALNGC", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIMBALNGCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC) This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> localVarResponse = await DatasetsIMBALNGCGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance (IMBALNGC) This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the Transmission System Demand Forecast made by the System Operator.                This API endpoint provides a maximum data output range of 10 days
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIMBALNGCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>("/datasets/IMBALNGC", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIMBALNGCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        public List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance> DatasetsIMBALNGCStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> localVarResponse = DatasetsIMBALNGCStreamGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIMBALNGCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>>("/datasets/IMBALNGC/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIMBALNGCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> DatasetsIMBALNGCStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>> localVarResponse = await DatasetsIMBALNGCStreamGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Imbalance stream This endpoint provides the Indicated Imbalance. Data is received by daily by midday from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Imbalance forecast for  each period is the difference between the sum of the PNs submitted for generation BM Units (i.e.  the Indicated Generation), and the National Demand Forecast made by the System Operator.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>>> DatasetsIMBALNGCStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsIMBALNGCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>>("/datasets/IMBALNGC/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsIMBALNGCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM) This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand DatasetsINDDEMGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> localVarResponse = DatasetsINDDEMGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM) This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDDEMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>("/datasets/INDDEM", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDDEMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM) This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> localVarResponse = await DatasetsINDDEMGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand (INDDEM) This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDDEMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>("/datasets/INDDEM", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDDEMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        public List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand> DatasetsINDDEMStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> localVarResponse = DatasetsINDDEMStreamGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDDEMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>>("/datasets/INDDEM/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDDEMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> DatasetsINDDEMStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>> localVarResponse = await DatasetsINDDEMStreamGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Demand stream This endpoint provides the indicated demand forecast for the current day and day-ahead received  from NGESO. The forecast is updated every half hour. The forecast for each period is the sum of  all the PNs submitted for BM Units which are forecast to be importing energy. Data is presented  an average MW for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>>> DatasetsINDDEMStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDDEMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>>("/datasets/INDDEM/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDDEMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN) This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration DatasetsINDGENGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> localVarResponse = DatasetsINDGENGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN) This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDGENGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>("/datasets/INDGEN", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDGENGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN) This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> localVarResponse = await DatasetsINDGENGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation (INDGEN) This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDGENGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>("/datasets/INDGEN", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDGENGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        public List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration> DatasetsINDGENStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> localVarResponse = DatasetsINDGENStreamGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDGENStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>>("/datasets/INDGEN/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDGENStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> DatasetsINDGENStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>> localVarResponse = await DatasetsINDGENStreamGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Generation stream This endpoint provides the Indicated Generation received from NGESO. Data is received daily, by  midday. Expressed as an average MW value for each Settlement period. The Indicated Generation  forecast for each period is the sum of all the PNs submitted for BM Units which are forecast to  be exporting energy, presented as a single average MW value for the Settlement Period.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>>> DatasetsINDGENStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDGENStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>>("/datasets/INDGEN/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDGENStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow DatasetsINDODGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> localVarResponse = DatasetsINDODGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDODGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>("/datasets/INDOD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDODGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> localVarResponse = await DatasetsINDODGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This API endpoint has a maximum range of 2 years (731 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDODGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>("/datasets/INDOD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDODGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow> DatasetsINDODStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> localVarResponse = DatasetsINDODStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDODStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>>("/datasets/INDOD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDODStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> DatasetsINDODStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>> localVarResponse = await DatasetsINDODStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn Daily (INDOD) stream This endpoint provides initial National Demand outturn daily data. The total daily energy volume is the total  demand volume for the previous day expressed on an Initial National Demand Outturn (INDO) basis, i.e. excluding  station transformer, pumping and interconnector export demand. It is calculated from summing the half hourly  INDO demands (divided by two to convert to MWh).    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>>> DatasetsINDODStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDODStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>>("/datasets/INDOD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDODStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn data (INDO) The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational DatasetsINDOGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> localVarResponse = DatasetsINDOGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn data (INDO) The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> DatasetsINDOGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational>("/datasets/INDO", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial National Demand Outturn data (INDO) The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> DatasetsINDOGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational> localVarResponse = await DatasetsINDOGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial National Demand Outturn data (INDO) The endpoint provides data showing the initial National Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational>> DatasetsINDOGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsINDOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational>("/datasets/INDO", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsINDOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO) The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission DatasetsITSDOGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> localVarResponse = DatasetsITSDOGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO) The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> DatasetsITSDOGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsITSDOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission>("/datasets/ITSDO", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsITSDOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO) The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> DatasetsITSDOGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission> localVarResponse = await DatasetsITSDOGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Initial Transmission System Outturn data (ITSDO) The endpoint provides data showing the Transmission System Initial Demand outturn.  Data is updated at 15 min intervals containing the initial demand expressed in MW.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission>> DatasetsITSDOGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsITSDOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission>("/datasets/ITSDO", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsITSDOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData DatasetsLOLPDRMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> localVarResponse = DatasetsLOLPDRMGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsLOLPDRMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>("/datasets/LOLPDRM", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsLOLPDRMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> localVarResponse = await DatasetsLOLPDRMGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsLOLPDRMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>("/datasets/LOLPDRM", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsLOLPDRMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        public List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData> DatasetsLOLPDRMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> localVarResponse = DatasetsLOLPDRMStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsLOLPDRMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>>("/datasets/LOLPDRM/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsLOLPDRMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> DatasetsLOLPDRMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>> localVarResponse = await DatasetsLOLPDRMStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Loss of Load Probability and De-rated Margin (LOLPDRM) stream The Loss of Load Probability and De-rated Margin data is received half-hourly from NGESO.                Loss of Load Probability (LOLP) is a measure of system reliability, calculated by NGESO for each Settlement Period,  using the methodology set out in the Loss of Load Probability Calculation Statement.                De-rated Margin is a forecast of the excess supply on the system, which has been adjusted to take account of the likely availability of electricity generators.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>>> DatasetsLOLPDRMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsLOLPDRMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>>("/datasets/LOLPDRM/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsLOLPDRMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow DatasetsMATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = DatasetsMATLGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/MATL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = await DatasetsMATLGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/MATL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsMATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = DatasetsMATLStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/MATL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsMATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = await DatasetsMATLStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Month-Ahead Total Load Forecast Per Bidding Zone (MATL / B0640) stream This endpoint provides month-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsMATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/MATL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Period (MDP) Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData DatasetsMDPGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> localVarResponse = DatasetsMDPGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Period (MDP) Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDPGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>("/datasets/MDP", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDPGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Period (MDP) Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> localVarResponse = await DatasetsMDPGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Period (MDP) Maximum Delivery Period (MDP) is the maximum period, expressed in minutes, over which the  Maximum Delivery Volume (MDV) applies. Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid)  that a particular BM Unit may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDPGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>("/datasets/MDP", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDPGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Period Stream (MDP) This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData> DatasetsMDPStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> localVarResponse = DatasetsMDPStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Period Stream (MDP) This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDPStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>>("/datasets/MDP/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDPStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Period Stream (MDP) This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> DatasetsMDPStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>> localVarResponse = await DatasetsMDPStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Period Stream (MDP) This endpoint provides Maximum Delivery Period data received from NGESO.                Maximum Delivery Period (MDP) is the maximum period over which the Maximum Delivery Volume (MDV) applies.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDP/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDP data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>>> DatasetsMDPStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDPStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>>("/datasets/MDP/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDPStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Volume (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData DatasetsMDVGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> localVarResponse = DatasetsMDVGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Volume (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDVGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>("/datasets/MDV", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDVGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Volume (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> localVarResponse = await DatasetsMDVGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Volume (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDVGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>("/datasets/MDV", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDVGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData> DatasetsMDVStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> localVarResponse = DatasetsMDVStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDVStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>>("/datasets/MDV/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDVStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> DatasetsMDVStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>> localVarResponse = await DatasetsMDVStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Delivery Volume Stream (MDV) This endpoint provides Maximum Delivery Volume data received from NGESO.                Maximum Delivery Volume is the maximum number of MWh of Offer (or Bid), that a particular BM Unit  may deliver within the associated Maximum Delivery Period.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MDV/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MDV data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>>> DatasetsMDVStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMDVStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>>("/datasets/MDV/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMDVStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC) This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin DatasetsMELNGCGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> localVarResponse = DatasetsMELNGCGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC) This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELNGCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>("/datasets/MELNGC", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELNGCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC) This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> localVarResponse = await DatasetsMELNGCGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin (MELNGC) This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.                This API endpoint provides a maximum data output range of 10 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELNGCGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>("/datasets/MELNGC", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELNGCGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        public List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin> DatasetsMELNGCStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> localVarResponse = DatasetsMELNGCStreamGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELNGCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>>("/datasets/MELNGC/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELNGCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> DatasetsMELNGCStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>> localVarResponse = await DatasetsMELNGCStreamGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Indicated Margin stream This endpoint provides the Indicated Margin. Data is received every half an hour from NGESO.  Expressed as an average MW value for each Settlement period. The Indicated Margin forecast for  each Settlement Period is the difference between the sum of the MELs submitted for that period,  and the National Demand Forecast made by the System Operator. The greater the value, the higher  the margin between available generation capacity and forecast demand - that is to say, the more  spare capacity there is forecast to be in the system.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>>> DatasetsMELNGCStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELNGCStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>>("/datasets/MELNGC/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELNGCStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Export Limit (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData DatasetsMELSGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> localVarResponse = DatasetsMELSGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Export Limit (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>("/datasets/MELS", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Export Limit (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> localVarResponse = await DatasetsMELSGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Export Limit (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>("/datasets/MELS", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Export Limit Stream (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMELSStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> localVarResponse = DatasetsMELSStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Export Limit Stream (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>("/datasets/MELS/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Export Limit Stream (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMELSStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> localVarResponse = await DatasetsMELSStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Export Limit Stream (MELS) This endpoint provides Maximum Export Limit data received from NGESO.    The Maximum Export Limit is the maximum power export level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MELs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mels/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MELS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>> DatasetsMELSStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMELSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>("/datasets/MELS/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMELSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Market Index Data (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse DatasetsMIDGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> localVarResponse = DatasetsMIDGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Market Index Data (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (dataProviders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "dataProviders", dataProviders));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>("/datasets/MID", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Market Index Data (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> localVarResponse = await DatasetsMIDGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Market Index Data (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (dataProviders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "dataProviders", dataProviders));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>("/datasets/MID", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Market Index Data Stream (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse> DatasetsMIDStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> localVarResponse = DatasetsMIDStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Market Index Data Stream (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (dataProviders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "dataProviders", dataProviders));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMIDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>>("/datasets/MID/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMIDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Market Index Data Stream (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> DatasetsMIDStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>> localVarResponse = await DatasetsMIDStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Market Index Data Stream (MID) This endpoint provides Market Index Data received from NGESO.                Market Index Data is a key component in the calculation of System Buy Price and System Sell Price for each  Settlement Period. This data is received from each of the appointed Market Index Data Providers (MIDPs) and  reflects the price of wholesale electricity in Great Britain in the short term markets. The Market Index Data  which is received from each MIDP for each Settlement Period consists of a Market Index Volume and  Market Index Price, representing the volume and price of trading for the relevant period in the market operated  by the MIDP. The Market Price (the volume weighed average Market Index Price) is used to derive  the Reverse Price (SBP or SSP).\&quot;                The two data providers available to query are N2EX (\&quot;N2EXMIDP\&quot;) and APX (\&quot;APXMIDP\&quot;).    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mid/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MID data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="dataProviders">The data providers to query. If no data provider is selected both will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>>> DatasetsMIDStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? dataProviders = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (dataProviders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "dataProviders", dataProviders));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMIDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>>("/datasets/MID/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMIDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Import Limit (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData DatasetsMILSGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> localVarResponse = DatasetsMILSGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Import Limit (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMILSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>("/datasets/MILS", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMILSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Import Limit (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> localVarResponse = await DatasetsMILSGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Import Limit (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMILSGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>("/datasets/MILS", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMILSGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Import Limit Stream (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData> DatasetsMILSStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> localVarResponse = DatasetsMILSStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Import Limit Stream (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMILSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>("/datasets/MILS/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMILSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Maximum Import Limit Stream (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> DatasetsMILSStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>> localVarResponse = await DatasetsMILSStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Maximum Import Limit Stream (MILS) This endpoint provides Maximum Import Limit data received from NGESO.    The maximum power import level of a particular BM Unit at a particular time.  The data is updated every 30 minutes and within 15 minutes of the end of the effective Settlement Period.  MILs are submitted as a series of MW values and associated times in UTC.    By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/mils/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1  This endpoint has an optimised JSON payload and is aimed at frequent requests for MILS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>> DatasetsMILSStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMILSStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>("/datasets/MILS/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMILSStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Non-Zero Time (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData DatasetsMNZTGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> localVarResponse = DatasetsMNZTGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Non-Zero Time (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMNZTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>("/datasets/MNZT", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMNZTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Non-Zero Time (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> localVarResponse = await DatasetsMNZTGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Non-Zero Time (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMNZTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>("/datasets/MNZT", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMNZTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMNZTStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> localVarResponse = DatasetsMNZTStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMNZTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>("/datasets/MNZT/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMNZTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMNZTStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> localVarResponse = await DatasetsMNZTStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Non-Zero Time Stream (MNZT) This endpoint provides Minimum Non Zero Time data received from NGESO.    The Minimum Non-Zero Time represents the minimum time that a BM Unit can operate at a non-zero level as a result of a Bid-Offer Acceptance.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MNZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1                This endpoint has an optimised JSON payload and is aimed at frequent requests for MNZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>> DatasetsMNZTStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMNZTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>("/datasets/MNZT/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMNZTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Zero Time (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData DatasetsMZTGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> localVarResponse = DatasetsMZTGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Zero Time (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMZTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>("/datasets/MZT", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMZTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Zero Time (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> localVarResponse = await DatasetsMZTGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Zero Time (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMZTGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>("/datasets/MZT", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMZTGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Zero Time Stream (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData> DatasetsMZTStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> localVarResponse = DatasetsMZTStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Zero Time Stream (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMZTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>("/datasets/MZT/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMZTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Minimum Zero Time Stream (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> DatasetsMZTStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>> localVarResponse = await DatasetsMZTStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Minimum Zero Time Stream (MZT) This endpoint provides Minimum Zero Time data received from NGESO.    The Minimum Zero Time is the minimum time that a BM Unit which has been exporting must operate at zero or import, before returning to export;  whereas if the BM Unit has been importing, the MZT indicates the minimum time that it must operate at zero or export before returning to import,  if action by the System Operator (i.e. a Bid-Offer Acceptance) places it at such a level.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                  /// All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/MZT/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for MZT data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>> DatasetsMZTStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMZTStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>("/datasets/MZT/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMZTStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns the time when each dataset was last updated Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow DatasetsMetadataLatestGet(string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> localVarResponse = DatasetsMetadataLatestGetWithHttpInfo(format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns the time when each dataset was last updated Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> DatasetsMetadataLatestGetWithHttpInfo(string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMetadataLatestGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow>("/datasets/metadata/latest", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMetadataLatestGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns the time when each dataset was last updated Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> DatasetsMetadataLatestGetAsync(string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow> localVarResponse = await DatasetsMetadataLatestGetWithHttpInfoAsync(format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns the time when each dataset was last updated Depending on the dataset, this value may be taken from the timestamp on the source datafile, the  publishTime field on the dataset, or the latest available measurement time.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow>> DatasetsMetadataLatestGetWithHttpInfoAsync(string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsMetadataLatestGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow>("/datasets/metadata/latest", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsMetadataLatestGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily DatasetsNDFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> localVarResponse = DatasetsNDFDGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>("/datasets/NDFD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> localVarResponse = await DatasetsNDFDGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 92 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>("/datasets/NDFD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily> DatasetsNDFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> localVarResponse = DatasetsNDFDStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>>("/datasets/NDFD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> DatasetsNDFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>> localVarResponse = await DatasetsNDFDStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) National Demand (NDFD) This endpoint provides the National Demand forecast received from NGESO.  Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>>> DatasetsNDFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>>("/datasets/NDFD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF) This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead DatasetsNDFGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> localVarResponse = DatasetsNDFGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF) This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>("/datasets/NDF", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF) This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> localVarResponse = await DatasetsNDFGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast (NDF) This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                This API endpoint provides a maximum data output range of 10 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>("/datasets/NDF", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead> DatasetsNDFStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> localVarResponse = DatasetsNDFStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>>("/datasets/NDF/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> DatasetsNDFStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>> localVarResponse = await DatasetsNDFStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// National Day and Day-Ahead National Demand Forecast stream This endpoint provides the National Demand forecast received from NGESO. Data is available  daily and will show values for the day ahead. Expressed as an average MW  value for each Settlement period. The forecast is based on historically metered generation  output for Great Britain. This value INCLUDES transmission losses, but EXCLUDES Interconnector  flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>>> DatasetsNDFStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>>("/datasets/NDF/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly DatasetsNDFWGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> localVarResponse = DatasetsNDFWGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>("/datasets/NDFW", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> localVarResponse = await DatasetsNDFWGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API endpoint provides a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>("/datasets/NDFW", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly> DatasetsNDFWStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> localVarResponse = DatasetsNDFWStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>>("/datasets/NDFW/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> DatasetsNDFWStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>> localVarResponse = await DatasetsNDFWStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) National Demand (NDFW) This endpoint provides the National Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the National Demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>>> DatasetsNDFWStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDFWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>>("/datasets/NDFW/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDFWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deviate from Zero (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNDZGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = DatasetsNDZGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deviate from Zero (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDZGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NDZ", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDZGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deviate from Zero (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = await DatasetsNDZGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deviate from Zero (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDZGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NDZ", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDZGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNDZStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = DatasetsNDZStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDZStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NDZ/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDZStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNDZStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = await DatasetsNDZStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deviate from Zero Stream (NDZ) This endpoint provides Notice to Deviate from Zero data received from NGESO.                Notice to Deviate from Zero (NDZ) indicates the length of time required for a BM Unit to start importing or  exporting energy, from a zero Physical Notification level as a result of a Bid-Offer Acceptance, expressed in  minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NDZ/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NDZ data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNDZStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNDZStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NDZ/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNDZStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData DatasetsNETBSADGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> localVarResponse = DatasetsNETBSADGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNETBSADGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>("/datasets/NETBSAD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNETBSADGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> localVarResponse = await DatasetsNETBSADGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNETBSADGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>("/datasets/NETBSAD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNETBSADGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData> DatasetsNETBSADStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> localVarResponse = DatasetsNETBSADStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNETBSADStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>>("/datasets/NETBSAD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNETBSADStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> DatasetsNETBSADStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>> localVarResponse = await DatasetsNETBSADStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Net Balancing Services Adjustment Data (NETBSAD) This endpoint provides Net Balancing Services Adjustment data received from NGESO.                Net Balancing Services Adjustment data covers the buy/sell price, cost and volume adjustments for each  settlement period.                 By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/netbsad/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NETBSAD data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>>> DatasetsNETBSADStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNETBSADStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>>("/datasets/NETBSAD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNETBSADStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData DatasetsNONBMGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> localVarResponse = DatasetsNONBMGetWithHttpInfo(from, to, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNONBMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>("/datasets/NONBM", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNONBMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> localVarResponse = await DatasetsNONBMGetWithHttpInfoAsync(from, to, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNONBMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>("/datasets/NONBM", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNONBMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) stream This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData> DatasetsNONBMStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> localVarResponse = DatasetsNONBMStreamGetWithHttpInfo(from, to);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) stream This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNONBMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>>("/datasets/NONBM/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNONBMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) stream This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> DatasetsNONBMStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>> localVarResponse = await DatasetsNONBMStreamGetWithHttpInfoAsync(from, to, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Non-BM STOR (NONBM) stream This endpoint provides data about the Short Term Operating Reserves (STOR) that have been made use of  by NGESO. This is activity that is outside of the Balancing Mechanism and takes place to meet the need to  increase generation or decrease demand.                To retrieve data from a particular time window, use the optional start and end time parameters.  These times should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.  If no time window is chosen, the default output will be the latest published data.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Non-BM STOR data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data publish time window. (optional)</param>
        /// <param name="to">The end of the data publish time window. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>>> DatasetsNONBMStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNONBMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>>("/datasets/NONBM/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNONBMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily DatasetsNOU2T14DGet(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> localVarResponse = DatasetsNOU2T14DGetWithHttpInfo(publishDate, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> DatasetsNOU2T14DGetWithHttpInfo(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily>("/datasets/NOU2T14D", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> DatasetsNOU2T14DGetAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily> localVarResponse = await DatasetsNOU2T14DGetWithHttpInfoAsync(publishDate, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated data (NOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering 2 days ahead to 14 days ahead. The data is aggregated at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily>> DatasetsNOU2T14DGetWithHttpInfoAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily>("/datasets/NOU2T14D", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly DatasetsNOU2T3YWGet(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> localVarResponse = DatasetsNOU2T3YWGetWithHttpInfo(publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> DatasetsNOU2T3YWGetWithHttpInfo(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (week != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "week", week));
            }
            if (year != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "year", year));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly>("/datasets/NOU2T3YW", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> DatasetsNOU2T3YWGetAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly> localVarResponse = await DatasetsNOU2T3YWGetWithHttpInfoAsync(publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated data (NOU2T3YW) This endpoint provides a forward view of availability (also referred to as Output Usable data  under the Grid Code) for generation and interconnector capacity, accounting for planned outages  covering availability data from 2 weeks ahead to 156 weeks ahead.  The data is an aggregation of all Fuel Type categories at national level.                Date parameter must be provided in the exact format yyyy-MM-dd.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDate">The publish date for filtering. This must be in the format yyyy-MM-dd. (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="week"> (optional)</param>
        /// <param name="year"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly>> DatasetsNOU2T3YWGetWithHttpInfoAsync(DateTime? publishDate = default(DateTime?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<int>? week = default(List<int>?), List<int>? year = default(List<int>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDate", publishDate));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (week != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "week", week));
            }
            if (year != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "year", year));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly>("/datasets/NOU2T3YW", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Bids (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNTBGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = DatasetsNTBGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Bids (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTBGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NTB", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTBGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Bids (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = await DatasetsNTBGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Bids (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTBGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NTB", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTBGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTBStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = DatasetsNTBStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTBStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NTB/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTBStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTBStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = await DatasetsNTBStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Bids Stream (NTB) This endpoint provides Notice to Deliver Bids data received from NGESO.                Notice to Deliver Bids (NTB) indicates the length of time between the issuing of a Bid-Offer Acceptance and the  time when a BM Unit begins to deliver Bid volumes, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTB/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTB data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNTBStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTBStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NTB/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTBStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Offers (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData DatasetsNTOGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = DatasetsNTOGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Offers (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NTO", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Offers (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> localVarResponse = await DatasetsNTOGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Offers (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-06-08T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTOGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>("/datasets/NTO", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTOGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData> DatasetsNTOStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = DatasetsNTOStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTOStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NTO/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTOStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> DatasetsNTOStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>> localVarResponse = await DatasetsNTOStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Notice to Deliver Offers Stream (NTO) This endpoint provides Notice to Deliver Offers data received from NGESO.                Notice to Deliver Offers (NTO) indicates the length of time required for a BM Unit to start delivering Offers  from the time that the Bid-Offer Acceptance is issued, expressed in minutes.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/NTO/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for NTO data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>> DatasetsNTOStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsNTOStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>("/datasets/NTO/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsNTOStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly DatasetsOCNMF3Y2Get(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> localVarResponse = DatasetsOCNMF3Y2GetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2GetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3Y2Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>("/datasets/OCNMF3Y2", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3Y2Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2GetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> localVarResponse = await DatasetsOCNMF3Y2GetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.                This API endpoint has a maximum data output range of 7 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2GetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3Y2Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>("/datasets/OCNMF3Y2", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3Y2Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        public List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly> DatasetsOCNMF3Y2StreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> localVarResponse = DatasetsOCNMF3Y2StreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2StreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3Y2StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>>("/datasets/OCNMF3Y2/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3Y2StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> DatasetsOCNMF3Y2StreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>> localVarResponse = await DatasetsOCNMF3Y2StreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Generating Plant Demand Margin (OCNMF3Y2) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Margin for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>>> DatasetsOCNMF3Y2StreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3Y2StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>>("/datasets/OCNMF3Y2/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3Y2StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly DatasetsOCNMF3YGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> localVarResponse = DatasetsOCNMF3YGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3YGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>("/datasets/OCNMF3Y", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3YGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> localVarResponse = await DatasetsOCNMF3YGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3YGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>("/datasets/OCNMF3Y", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3YGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        public List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly> DatasetsOCNMF3YStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> localVarResponse = DatasetsOCNMF3YStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3YStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>>("/datasets/OCNMF3Y/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3YStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> DatasetsOCNMF3YStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>> localVarResponse = await DatasetsOCNMF3YStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-156 weeks ahead) Surplus (OCNMF3Y) stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily weekly half hour MW value of Generating Plant Demand Surplus for each week for the 2 to 156 weeks ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>>> DatasetsOCNMF3YStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMF3YStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>>("/datasets/OCNMF3Y/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMF3YStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2) The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily DatasetsOCNMFD2Get(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> localVarResponse = DatasetsOCNMFD2GetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2) The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2GetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFD2Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>("/datasets/OCNMFD2", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFD2Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2) The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2GetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> localVarResponse = await DatasetsOCNMFD2GetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin (OCNMFD2) The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2GetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFD2Get";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>("/datasets/OCNMFD2", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFD2Get", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        public List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily> DatasetsOCNMFD2StreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> localVarResponse = DatasetsOCNMFD2StreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2StreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFD2StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>>("/datasets/OCNMFD2/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFD2StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> DatasetsOCNMFD2StreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>> localVarResponse = await DatasetsOCNMFD2StreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Generating Plant Demand Margin stream The Demand and Surplus forecast demand margin data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>>> DatasetsOCNMFD2StreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFD2StreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>>("/datasets/OCNMFD2/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFD2StreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily DatasetsOCNMFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> localVarResponse = DatasetsOCNMFDGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>("/datasets/OCNMFD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> localVarResponse = await DatasetsOCNMFDGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus (OCNMFD) The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    This API endpoint provides a maximum data output range of 7 days.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>("/datasets/OCNMFD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        public List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily> DatasetsOCNMFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> localVarResponse = DatasetsOCNMFDStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>>("/datasets/OCNMFD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> DatasetsOCNMFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>> localVarResponse = await DatasetsOCNMFDStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Surplus stream The Demand and Surplus forecast surplus data is received hourly from NGESO.  It shows the daily peak half hour MW value of Generating Plant Demand Surplus for each day for the 2 to 14 days ahead.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the surplus forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>>> DatasetsOCNMFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsOCNMFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>>("/datasets/OCNMFD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsOCNMFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Physical Notifications (PN) This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData DatasetsPNGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> localVarResponse = DatasetsPNGetWithHttpInfo(settlementDate, settlementPeriod, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Physical Notifications (PN) This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsPNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>("/datasets/PN", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsPNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Physical Notifications (PN) This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> localVarResponse = await DatasetsPNGetWithHttpInfoAsync(settlementDate, settlementPeriod, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Physical Notifications (PN) This endpoint provides Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/PN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/PN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsPNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>("/datasets/PN", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsPNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Physical Notifications Stream (PN) This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsPNStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> localVarResponse = DatasetsPNStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Physical Notifications Stream (PN) This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsPNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>("/datasets/PN/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsPNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Physical Notifications Stream (PN) This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsPNStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> localVarResponse = await DatasetsPNStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Physical Notifications Stream (PN) This endpoint provides Physical Notification data received from NGESO.  A Physical Notification is the best estimate of the level of generation or demand that a participant in the BM expects a BM Unit to export or import, respectively, in a Settlement Period.                Physical Notifications are submitted as a series of point MW values.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/PN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/PN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for PN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>> DatasetsPNStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsPNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>("/datasets/PN/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsPNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Balancing Services Volume (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData DatasetsQASGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> localVarResponse = DatasetsQASGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Balancing Services Volume (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQASGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>("/datasets/QAS", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQASGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Balancing Services Volume (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> localVarResponse = await DatasetsQASGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Balancing Services Volume (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQASGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>("/datasets/QAS", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQASGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Balancing Services Volume Stream (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData> DatasetsQASStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> localVarResponse = DatasetsQASStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Balancing Services Volume Stream (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQASStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>>("/datasets/QAS/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQASStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Balancing Services Volume Stream (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> DatasetsQASStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>> localVarResponse = await DatasetsQASStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Balancing Services Volume Stream (QAS) This endpoint provides Balancing Services Volume data received from NGESO.                Balancing Services Volume is a volume which is received from the System Operator, which represents the volume  of energy (MWh) associated with the provision of Applicable Balancing Services for each relevant BM Unit and  Settlement Period.    QAS can be positive or negative and is normally only provided where there is a non-zero volume.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/qas/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>>> DatasetsQASStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQASStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>>("/datasets/QAS/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQASStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Quiescent Physical Notifications (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData DatasetsQPNGet(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> localVarResponse = DatasetsQPNGetWithHttpInfo(settlementDate, settlementPeriod, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Quiescent Physical Notifications (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNGetWithHttpInfo(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQPNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>("/datasets/QPN", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQPNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Quiescent Physical Notifications (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNGetAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> localVarResponse = await DatasetsQPNGetWithHttpInfoAsync(settlementDate, settlementPeriod, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Quiescent Physical Notifications (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO. It returns the data valid for a single settlement period.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering by datetime:                     /datasets/QPN?settlementDate&#x3D;2022-07-01T01:00Z                Filtering by settlement date and period:                    /datasets/QPN?settlementDate&#x3D;2022-07-01&amp;settlementPeriod&#x3D;5
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementDate">The settlement date or datetime to query.</param>
        /// <param name="settlementPeriod">The settlement period to query. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNGetWithHttpInfoAsync(DateTime settlementDate, int? settlementPeriod = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementDate", settlementDate));
            if (settlementPeriod != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriod", settlementPeriod));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQPNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>("/datasets/QPN", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQPNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData> DatasetsQPNStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> localVarResponse = DatasetsQPNStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQPNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>("/datasets/QPN/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQPNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> DatasetsQPNStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>> localVarResponse = await DatasetsQPNStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Quiescent Physical Notifications Stream (QPN) This endpoint provides Quiescent Physical Notification data received from NGESO.  Quiescent Physical Notifications describe the MW levels to be deducted from the Physical Notification of a BM Unit to determine a resultant operating level.                The settlement period to query can be specified as a date and settlement period, or as a datetime  which will resolve to the settlement period that time falls within.  If a settlement period is provided, it will take precedence over the time portion of the datetime.    Some examples of date parameter combinations are shown below.                Filtering from settlement datetime to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement datetime to settlement date and period:                     /datasets/QPN/stream?from&#x3D;2022-07-01T00:00Z&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15                Filtering from settlement date and period to settlement datetime:                     /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03T06:00Z                Filtering from settlement date and period to settlement date and period:                    /datasets/QPN/stream?from&#x3D;2022-07-01&amp;settlementPeriodFrom&#x3D;3&amp;to&#x3D;2022-07-03&amp;settlementPeriodTo&#x3D;15    This endpoint has an optimised JSON payload and is aimed at frequent requests for QPN data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The settlement date to query from.</param>
        /// <param name="to">The settlement date to query up to.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>> DatasetsQPNStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsQPNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>("/datasets/QPN/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsQPNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRDREGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = DatasetsRDREGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDREGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RDRE", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDREGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = await DatasetsRDREGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDREGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RDRE", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDREGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDREStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = DatasetsRDREStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDREStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RDRE/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDREStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDREStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = await DatasetsRDREStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Export (RDRE) Stream This endpoint provides Run Down Rate Export data received from NGESO.                Run Down Rate Export (RDRE) expresses the rate of decrease in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdre/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRDREStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDREStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RDRE/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDREStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRDRIGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = DatasetsRDRIGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDRIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RDRI", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDRIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = await DatasetsRDRIGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDRIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RDRI", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDRIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRDRIStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = DatasetsRDRIStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDRIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RDRI/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDRIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRDRIStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = await DatasetsRDRIStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Down Rate Import (RDRI) Stream This endpoint provides Run Down Rate Import data received from NGESO.                Run Down Rate Import (RDRI) expresses the rate of increase in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rdri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRDRIStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRDRIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RDRI/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRDRIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage DatasetsREMITGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> localVarResponse = DatasetsREMITGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsREMITGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>("/datasets/REMIT", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsREMITGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> localVarResponse = await DatasetsREMITGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.                Only JSON and XML formats are supported for this endpoint.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsREMITGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>("/datasets/REMIT", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsREMITGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage> DatasetsREMITStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> localVarResponse = DatasetsREMITStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsREMITStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>>("/datasets/REMIT/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsREMITStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> DatasetsREMITStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>> localVarResponse = await DatasetsREMITStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) stream The Regulation on Wholesale Energy Markets Integrity and Transparency (REMIT) is an EU regulation aimed at preventing market abuse in wholesale energy markets.    This endpoint returns information provided by market participants to comply with Article 4 of Regulation on Wholesale Energy Market Integrity and Transparency (REMIT) Regulation (EU) 1227/2011.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>>> DatasetsREMITStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsREMITStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>>("/datasets/REMIT/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsREMITStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRUREGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = DatasetsRUREGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRUREGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RURE", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRUREGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = await DatasetsRUREGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRUREGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RURE", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRUREGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) Stream This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRUREStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = DatasetsRUREStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) Stream This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRUREStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RURE/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRUREStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) Stream This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRUREStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = await DatasetsRUREStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Export (RURE) Stream This endpoint provides Run Up Rate Export data received from NGESO.                Run Up Rate Export (RURE) expresses the rate of increase in active power production (MW/minute)  for a particular BM Unit which is exporting power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/rure/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRUREStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRUREStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RURE/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRUREStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData DatasetsRURIGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = DatasetsRURIGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRURIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RURI", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRURIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData> localVarResponse = await DatasetsRURIGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.  There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRURIGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>("/datasets/RURI", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRURIGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) Stream This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicRateData> DatasetsRURIStreamGet(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = DatasetsRURIStreamGetWithHttpInfo(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) Stream This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIStreamGetWithHttpInfo(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRURIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RURI/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRURIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) Stream This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicRateData>> DatasetsRURIStreamGetAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>> localVarResponse = await DatasetsRURIStreamGetWithHttpInfoAsync(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Run Up Rate Import (RURI) Stream This endpoint provides Run Up Rate Import data received from NGESO.                Run Up Rate Import (RURI) expresses the rate of decrease in active power consumption (MW/minute)  for a particular BM Unit which is importing power within a particular operating range.   There can be up to three of these for a given BM Unit.                By default, the from and to parameters filter the data by time inclusively. If the settlementPeriodFrom or  settlementPeriodTo parameters are provided, the corresponding from or to parameter instead filters on settlement  date, allowing for searching by a combination of time and/or settlement date &amp; settlement period.  Note: When filtering via settlement date, from/to are treated as Dates only, with the time being ignored. For  example, 2022-06-01T00:00Z and 2022-06-01T11:11Z are both treated as the settlement date 2022-06-01.                All Dates and DateTimes should be expressed as defined within  &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 3339&lt;/a&gt;.                Some examples of date parameter combinations are shown below.                Filtering from start time to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z                Filtering from start time to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodTo&#x3D;1                Filtering from settlement date and period to start time:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1                Filtering from settlement date and period to settlement date and period:                    /datasets/ruri/stream?from&#x3D;2022-06-01T00:00Z&amp;to&#x3D;2022-07-01T00:00Z&amp;settlementPeriodFrom&#x3D;1&amp;settlementPeriodTo&#x3D;1    This endpoint has an optimised JSON payload and is aimed at frequent requests for QAS data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The \&quot;from\&quot; start time or settlement date for the filter.</param>
        /// <param name="to">The \&quot;to\&quot; start time or settlement date for the filter.</param>
        /// <param name="settlementPeriodFrom">The \&quot;from\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="settlementPeriodTo">The \&quot;to\&quot; settlement period for the filter. This should be an integer from 1-50 inclusive. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicRateData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicRateData>>> DatasetsRURIStreamGetWithHttpInfoAsync(DateTime from, DateTime to, int? settlementPeriodFrom = default(int?), int? settlementPeriodTo = default(int?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (settlementPeriodFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodFrom", settlementPeriodFrom));
            }
            if (settlementPeriodTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "settlementPeriodTo", settlementPeriodTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsRURIStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicRateData>>("/datasets/RURI/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsRURIStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Export Limit (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData DatasetsSELGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> localVarResponse = DatasetsSELGetWithHttpInfo(from, to, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Export Limit (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSELGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>("/datasets/SEL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSELGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Export Limit (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> localVarResponse = await DatasetsSELGetWithHttpInfoAsync(from, to, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Export Limit (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSELGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>("/datasets/SEL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSELGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Export Limit Stream (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSELStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> localVarResponse = DatasetsSELStreamGetWithHttpInfo(from, to, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Export Limit Stream (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSELStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>("/datasets/SEL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSELStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Export Limit Stream (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSELStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> localVarResponse = await DatasetsSELStreamGetWithHttpInfoAsync(from, to, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Export Limit Stream (SEL) This endpoint provides Stable Export Limit data received from NGESO.  Stable Export Limit is a positive megawatt value, expressing the minimum stable operating level at which a particular BM Unit can export power to the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SEL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>> DatasetsSELStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSELStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>("/datasets/SEL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSELStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Import Limit (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData DatasetsSILGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> localVarResponse = DatasetsSILGetWithHttpInfo(from, to, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Import Limit (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSILGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>("/datasets/SIL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSILGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Import Limit (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> localVarResponse = await DatasetsSILGetWithHttpInfoAsync(from, to, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Import Limit (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSILGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>("/datasets/SIL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSILGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Import Limit Stream (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData> DatasetsSILStreamGet(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> localVarResponse = DatasetsSILStreamGetWithHttpInfo(from, to, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Import Limit Stream (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILStreamGetWithHttpInfo(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSILStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>("/datasets/SIL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSILStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Stable Import Limit Stream (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> DatasetsSILStreamGetAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>> localVarResponse = await DatasetsSILStreamGetWithHttpInfoAsync(from, to, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Stable Import Limit Stream (SIL) This endpoint provides Stable Import Limit data received from NGESO.  Stable Import Limit is a negative megawatt value, expressing the minimum stable operating level at which a particular BM Unit can import power from the transmission system.                If no date window is chosen, the search will default to results from last 24 hours.                This endpoint has an optimised JSON payload and is aimed at frequent requests for SIL data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from">The start of the data time window. (optional)</param>
        /// <param name="to">The end of the data time window. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. If no BM unit is selected all BM units will be displayed. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>> DatasetsSILStreamGetWithHttpInfoAsync(DateTime? from = default(DateTime?), DateTime? to = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (from != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            }
            if (to != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSILStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>("/datasets/SIL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSILStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Warnings (SYSWARN) This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData DatasetsSYSWARNGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> localVarResponse = DatasetsSYSWARNGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Warnings (SYSWARN) This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSYSWARNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>("/datasets/SYSWARN", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSYSWARNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Warnings (SYSWARN) This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> localVarResponse = await DatasetsSYSWARNGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Warnings (SYSWARN) This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSYSWARNGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>("/datasets/SYSWARN", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSYSWARNGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Warnings (SYSWARN) stream This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        public List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData> DatasetsSYSWARNStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> localVarResponse = DatasetsSYSWARNStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Warnings (SYSWARN) stream This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSYSWARNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>>("/datasets/SYSWARN/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSYSWARNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// System Warnings (SYSWARN) stream This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> DatasetsSYSWARNStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>> localVarResponse = await DatasetsSYSWARNStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// System Warnings (SYSWARN) stream This endpoint provides system warnings data
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>>> DatasetsSYSWARNStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsSYSWARNStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>>("/datasets/SYSWARN/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsSYSWARNStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Temperature Data (TEMP) This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData DatasetsTEMPGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> localVarResponse = DatasetsTEMPGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Temperature Data (TEMP) This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> DatasetsTEMPGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTEMPGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData>("/datasets/TEMP", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTEMPGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Temperature Data (TEMP) This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> DatasetsTEMPGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData> localVarResponse = await DatasetsTEMPGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Temperature Data (TEMP) This endpoint provides the average degree celsius value measured at midday deemed to be  representative of the temperature for Great Britain. Data is gathered from 6 weather stations.  Default output will be the last 31 days. Values are received from 5pm each day.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData>> DatasetsTEMPGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTEMPGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData>("/datasets/TEMP", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTEMPGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily DatasetsTSDFDGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> localVarResponse = DatasetsTSDFDGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>("/datasets/TSDFD", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> localVarResponse = await DatasetsTSDFDGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This API endpoint provides a maximum data output range of 92 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFDGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>("/datasets/TSDFD", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily> DatasetsTSDFDStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> localVarResponse = DatasetsTSDFDStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>>("/datasets/TSDFD/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> DatasetsTSDFDStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>> localVarResponse = await DatasetsTSDFDStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-14 days ahead) Transmission System (TSDFD) stream This end point provides the Transmission System forecast. Data is available daily and will show values for the 2 to 14 days ahead.  Expressed as an average MW value for each Settlement period. The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.                Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>>> DatasetsTSDFDStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFDStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>>("/datasets/TSDFD/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFDStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead DatasetsTSDFGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> localVarResponse = DatasetsTSDFGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>("/datasets/TSDF", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> localVarResponse = await DatasetsTSDFGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>("/datasets/TSDF", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead> DatasetsTSDFStreamGet(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> localVarResponse = DatasetsTSDFStreamGetWithHttpInfo(boundary, publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFStreamGetWithHttpInfo(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>>("/datasets/TSDF/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> DatasetsTSDFStreamGetAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>> localVarResponse = await DatasetsTSDFStreamGetWithHttpInfoAsync(boundary, publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Day and Day-Ahead Transmission System Demand Forecast (TSDF) This endpoint provides the Transmission System forecast.  Data is received daily from NGESO and will show values for the day ahead.  Expressed as an average MW value for each Settlement period.  The Transmission System Demand Forecast is based on historically metered generation output for Great Britain.  This value INCLUDES Interconnector flows and demand from station transformers and pumped storage units.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundary"> (optional)</param>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>>> DatasetsTSDFStreamGetWithHttpInfoAsync(string? boundary = default(string?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (boundary != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "boundary", boundary));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>>("/datasets/TSDF/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly DatasetsTSDFWGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> localVarResponse = DatasetsTSDFWGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>("/datasets/TSDFW", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> localVarResponse = await DatasetsTSDFWGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    This API will provide a maximum data output range of 366 days.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>("/datasets/TSDFW", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        public List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly> DatasetsTSDFWStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> localVarResponse = DatasetsTSDFWStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>>("/datasets/TSDFW/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> DatasetsTSDFWStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>> localVarResponse = await DatasetsTSDFWStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Demand and Surplus Forecast Data (2-52 weeks ahead) Transmission System Demand (TSDFW) This endpoint provides the Transmission System Demand forecast received from NGESO.  Data is available from 4pm each Thursday and will show values for the 2 to 52 weeks ahead.  Expressed as an average MW value for each week. The forecast is based on historically metered generation output for Great Britain.  This value INCLUDES transmission losses, but EXCLUDES Interconnector flows and demand from station.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the transmission system demand forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>>> DatasetsTSDFWStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsTSDFWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>>("/datasets/TSDFW/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsTSDFWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily DatasetsUOU2T14DGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> localVarResponse = DatasetsUOU2T14DGetWithHttpInfo(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>("/datasets/UOU2T14D", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> localVarResponse = await DatasetsUOU2T14DGetWithHttpInfoAsync(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T14DGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>("/datasets/UOU2T14D", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T14DGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily> DatasetsUOU2T14DStreamGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> localVarResponse = DatasetsUOU2T14DStreamGetWithHttpInfo(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DStreamGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T14DStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>>("/datasets/UOU2T14D/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T14DStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> DatasetsUOU2T14DStreamGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>> localVarResponse = await DatasetsUOU2T14DStreamGetWithHttpInfoAsync(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 14 Days Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T14D) This endpoint provides a forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 days ahead to 14 days ahead; it is aggregated by  National Grid Balancing Mechanism Units (NGC BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>>> DatasetsUOU2T14DStreamGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T14DStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>>("/datasets/UOU2T14D/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T14DStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly DatasetsUOU2T3YWGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> localVarResponse = DatasetsUOU2T3YWGetWithHttpInfo(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>("/datasets/UOU2T3YW", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> localVarResponse = await DatasetsUOU2T3YWGetWithHttpInfoAsync(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T3YWGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>("/datasets/UOU2T3YW", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T3YWGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly> DatasetsUOU2T3YWStreamGet(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> localVarResponse = DatasetsUOU2T3YWStreamGetWithHttpInfo(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWStreamGetWithHttpInfo(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T3YWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>>("/datasets/UOU2T3YW/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T3YWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> DatasetsUOU2T3YWStreamGetAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>> localVarResponse = await DatasetsUOU2T3YWStreamGetWithHttpInfoAsync(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 2 to 156 Weeks Ahead Generation availability aggregated by Balancing Mechanism Units Stream (UOU2T3YW) This endpoint forward view of availability (also referred to as Output Usable  data under the Grid Code) for generation and interconnector capacity, accounting for planned  outages covering availability data from 2 weeks ahead to 156 weeks ahead; it is aggregated by  Balancing Mechanism Units (BMUs).                In the context of this report, BMUs can be considered as generating units.  Elexon BMUs differs from NGC BMUs by including a prefix e.g. &#39;T_&#39;.  The mapping between NGC and Elexon BMUs can be retrieved via reference data API endpoints.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fuelType">The fuel type to query. Add each fuel type separately. If no fuel types are supplied, all fuel types will be returned. (optional)</param>
        /// <param name="publishDateTimeFrom">Start of the Publish Time range to query. If specified, PublishDateTimeTo must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="publishDateTimeTo">End of the Publish Time range to query. If specified, PublishDateTimeFrom must also be specified.  If both are omitted, latest published data is returned. (optional)</param>
        /// <param name="bmUnit">The BM units to query. Add each unit separately. Either the Elexon ID or the National Grid ID can be used.  If no BM unit is supplied all BM units will be returned. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>>> DatasetsUOU2T3YWStreamGetWithHttpInfoAsync(List<string>? fuelType = default(List<string>?), DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), List<string>? bmUnit = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (bmUnit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "bmUnit", bmUnit));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsUOU2T3YWStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>>("/datasets/UOU2T3YW/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsUOU2T3YWStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow DatasetsWATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = DatasetsWATLGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/WATL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = await DatasetsWATLGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/WATL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsWATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = DatasetsWATLStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/WATL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsWATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = await DatasetsWATLStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Week-Ahead Total Load Forecast Per Bidding Zone (WATL / B0630) stream This endpoint provides week-ahead total load forecast per bidding zone data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsWATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/WATL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast DatasetsWINDFORGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> localVarResponse = DatasetsWINDFORGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWINDFORGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>("/datasets/WINDFOR", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWINDFORGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> localVarResponse = await DatasetsWINDFORGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWINDFORGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>("/datasets/WINDFOR", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWINDFORGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        public List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast> DatasetsWINDFORStreamGet(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> localVarResponse = DatasetsWINDFORStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORStreamGetWithHttpInfo(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWINDFORStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>>("/datasets/WINDFOR/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWINDFORStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> DatasetsWINDFORStreamGetAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>> localVarResponse = await DatasetsWINDFORStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Wind Generation Forecast (WINDFOR) This endpoint provides wind generation forecast data.    Specific publish time filters may be supplied, otherwise this will retrieve the latest published forecast.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the wind generation forecast data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"> (optional)</param>
        /// <param name="publishDateTimeTo"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>>> DatasetsWINDFORStreamGetWithHttpInfoAsync(DateTime? publishDateTimeFrom = default(DateTime?), DateTime? publishDateTimeTo = default(DateTime?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (publishDateTimeFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            }
            if (publishDateTimeTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsWINDFORStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>>("/datasets/WINDFOR/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsWINDFORStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow DatasetsYAFMGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> localVarResponse = DatasetsYAFMGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYAFMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>("/datasets/YAFM", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYAFMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> localVarResponse = await DatasetsYAFMGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.                A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.    This API endpoint has a maximum range of 20 years (7305 days).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYAFMGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>("/datasets/YAFM", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYAFMGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow> DatasetsYAFMStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> localVarResponse = DatasetsYAFMStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYAFMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>>("/datasets/YAFM/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYAFMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> DatasetsYAFMStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>> localVarResponse = await DatasetsYAFMStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year Ahead Forecast Margin (YAFM / B0810) This endpoint provides year-ahead forecast margin data.    A year-ahead forecast margin is defined as the difference between yearly forecast of available generation capacity and yearly forecast of total load,  taking into account the forecast of total generation capacity, forecast of availability of generation and forecast of reserves contracted for system services.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>>> DatasetsYAFMStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYAFMStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>>("/datasets/YAFM/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYAFMStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow DatasetsYATLGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = DatasetsYATLGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/YATL", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> localVarResponse = await DatasetsYATLGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This API endpoint has a maximum range of 367 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json",
                "application/xml",
                "text/xml",
                "text/csv"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYATLGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>("/datasets/YATL", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYATLGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow> DatasetsYATLStreamGet(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = DatasetsYATLStreamGetWithHttpInfo(publishDateTimeFrom, publishDateTimeTo);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLStreamGetWithHttpInfo(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/YATL/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> DatasetsYATLStreamGetAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>> localVarResponse = await DatasetsYATLStreamGetWithHttpInfoAsync(publishDateTimeFrom, publishDateTimeTo, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Year-Ahead Total Load Forecast Per Bidding Zone (YATL / B0650) stream This endpoint provides year-ahead total load per bidding zone forecast data with minimum possible  and maximum available loads provided in MW values.    This endpoint has an optimised JSON payload and is aimed at frequent requests for the data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="publishDateTimeFrom"></param>
        /// <param name="publishDateTimeTo"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>>> DatasetsYATLStreamGetWithHttpInfoAsync(DateTime publishDateTimeFrom, DateTime publishDateTimeTo, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeFrom", publishDateTimeFrom));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "publishDateTimeTo", publishDateTimeTo));

            localVarRequestOptions.Operation = "DatasetsApi.DatasetsYATLStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>>("/datasets/YATL/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DatasetsYATLStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
