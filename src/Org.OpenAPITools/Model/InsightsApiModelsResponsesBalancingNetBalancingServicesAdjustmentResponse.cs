/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse
    /// </summary>
    [DataContract(Name = "Insights.Api.Models.Responses.Balancing.NetBalancingServicesAdjustmentResponse")]
    public partial class InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse : IEquatable<InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse" /> class.
        /// </summary>
        /// <param name="startTime">startTime.</param>
        /// <param name="settlementDate">settlementDate.</param>
        /// <param name="settlementPeriod">settlementPeriod.</param>
        /// <param name="netBuyPriceCostAdjustmentEnergy">netBuyPriceCostAdjustmentEnergy.</param>
        /// <param name="netBuyPriceVolumeAdjustmentEnergy">netBuyPriceVolumeAdjustmentEnergy.</param>
        /// <param name="netBuyPriceVolumeAdjustmentSystem">netBuyPriceVolumeAdjustmentSystem.</param>
        /// <param name="buyPricePriceAdjustment">buyPricePriceAdjustment.</param>
        /// <param name="netSellPriceCostAdjustmentEnergy">netSellPriceCostAdjustmentEnergy.</param>
        /// <param name="netSellPriceVolumeAdjustmentEnergy">netSellPriceVolumeAdjustmentEnergy.</param>
        /// <param name="netSellPriceVolumeAdjustmentSystem">netSellPriceVolumeAdjustmentSystem.</param>
        /// <param name="sellPricePriceAdjustment">sellPricePriceAdjustment.</param>
        public InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse(DateTime startTime = default(DateTime), DateTime settlementDate = default(DateTime), int settlementPeriod = default(int), double netBuyPriceCostAdjustmentEnergy = default(double), double netBuyPriceVolumeAdjustmentEnergy = default(double), double netBuyPriceVolumeAdjustmentSystem = default(double), double buyPricePriceAdjustment = default(double), double netSellPriceCostAdjustmentEnergy = default(double), double netSellPriceVolumeAdjustmentEnergy = default(double), double netSellPriceVolumeAdjustmentSystem = default(double), double sellPricePriceAdjustment = default(double))
        {
            this.StartTime = startTime;
            this.SettlementDate = settlementDate;
            this.SettlementPeriod = settlementPeriod;
            this.NetBuyPriceCostAdjustmentEnergy = netBuyPriceCostAdjustmentEnergy;
            this.NetBuyPriceVolumeAdjustmentEnergy = netBuyPriceVolumeAdjustmentEnergy;
            this.NetBuyPriceVolumeAdjustmentSystem = netBuyPriceVolumeAdjustmentSystem;
            this.BuyPricePriceAdjustment = buyPricePriceAdjustment;
            this.NetSellPriceCostAdjustmentEnergy = netSellPriceCostAdjustmentEnergy;
            this.NetSellPriceVolumeAdjustmentEnergy = netSellPriceVolumeAdjustmentEnergy;
            this.NetSellPriceVolumeAdjustmentSystem = netSellPriceVolumeAdjustmentSystem;
            this.SellPricePriceAdjustment = sellPricePriceAdjustment;
        }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        /// <example>2022-06-25T13:00Z</example>
        [DataMember(Name = "startTime", EmitDefaultValue = false)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Gets or Sets SettlementDate
        /// </summary>
        /// <example>Sat Jun 25 02:00:00 CEST 2022</example>
        [DataMember(Name = "settlementDate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime SettlementDate { get; set; }

        /// <summary>
        /// Gets or Sets SettlementPeriod
        /// </summary>
        /// <example>29</example>
        [DataMember(Name = "settlementPeriod", EmitDefaultValue = false)]
        public int SettlementPeriod { get; set; }

        /// <summary>
        /// Gets or Sets NetBuyPriceCostAdjustmentEnergy
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netBuyPriceCostAdjustmentEnergy", EmitDefaultValue = false)]
        public double NetBuyPriceCostAdjustmentEnergy { get; set; }

        /// <summary>
        /// Gets or Sets NetBuyPriceVolumeAdjustmentEnergy
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netBuyPriceVolumeAdjustmentEnergy", EmitDefaultValue = false)]
        public double NetBuyPriceVolumeAdjustmentEnergy { get; set; }

        /// <summary>
        /// Gets or Sets NetBuyPriceVolumeAdjustmentSystem
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netBuyPriceVolumeAdjustmentSystem", EmitDefaultValue = false)]
        public double NetBuyPriceVolumeAdjustmentSystem { get; set; }

        /// <summary>
        /// Gets or Sets BuyPricePriceAdjustment
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "buyPricePriceAdjustment", EmitDefaultValue = false)]
        public double BuyPricePriceAdjustment { get; set; }

        /// <summary>
        /// Gets or Sets NetSellPriceCostAdjustmentEnergy
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netSellPriceCostAdjustmentEnergy", EmitDefaultValue = false)]
        public double NetSellPriceCostAdjustmentEnergy { get; set; }

        /// <summary>
        /// Gets or Sets NetSellPriceVolumeAdjustmentEnergy
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netSellPriceVolumeAdjustmentEnergy", EmitDefaultValue = false)]
        public double NetSellPriceVolumeAdjustmentEnergy { get; set; }

        /// <summary>
        /// Gets or Sets NetSellPriceVolumeAdjustmentSystem
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "netSellPriceVolumeAdjustmentSystem", EmitDefaultValue = false)]
        public double NetSellPriceVolumeAdjustmentSystem { get; set; }

        /// <summary>
        /// Gets or Sets SellPricePriceAdjustment
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "sellPricePriceAdjustment", EmitDefaultValue = false)]
        public double SellPricePriceAdjustment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse {\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  SettlementDate: ").Append(SettlementDate).Append("\n");
            sb.Append("  SettlementPeriod: ").Append(SettlementPeriod).Append("\n");
            sb.Append("  NetBuyPriceCostAdjustmentEnergy: ").Append(NetBuyPriceCostAdjustmentEnergy).Append("\n");
            sb.Append("  NetBuyPriceVolumeAdjustmentEnergy: ").Append(NetBuyPriceVolumeAdjustmentEnergy).Append("\n");
            sb.Append("  NetBuyPriceVolumeAdjustmentSystem: ").Append(NetBuyPriceVolumeAdjustmentSystem).Append("\n");
            sb.Append("  BuyPricePriceAdjustment: ").Append(BuyPricePriceAdjustment).Append("\n");
            sb.Append("  NetSellPriceCostAdjustmentEnergy: ").Append(NetSellPriceCostAdjustmentEnergy).Append("\n");
            sb.Append("  NetSellPriceVolumeAdjustmentEnergy: ").Append(NetSellPriceVolumeAdjustmentEnergy).Append("\n");
            sb.Append("  NetSellPriceVolumeAdjustmentSystem: ").Append(NetSellPriceVolumeAdjustmentSystem).Append("\n");
            sb.Append("  SellPricePriceAdjustment: ").Append(SellPricePriceAdjustment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse);
        }

        /// <summary>
        /// Returns true if InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InsightsApiModelsResponsesBalancingNetBalancingServicesAdjustmentResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.SettlementDate == input.SettlementDate ||
                    (this.SettlementDate != null &&
                    this.SettlementDate.Equals(input.SettlementDate))
                ) && 
                (
                    this.SettlementPeriod == input.SettlementPeriod ||
                    this.SettlementPeriod.Equals(input.SettlementPeriod)
                ) && 
                (
                    this.NetBuyPriceCostAdjustmentEnergy == input.NetBuyPriceCostAdjustmentEnergy ||
                    this.NetBuyPriceCostAdjustmentEnergy.Equals(input.NetBuyPriceCostAdjustmentEnergy)
                ) && 
                (
                    this.NetBuyPriceVolumeAdjustmentEnergy == input.NetBuyPriceVolumeAdjustmentEnergy ||
                    this.NetBuyPriceVolumeAdjustmentEnergy.Equals(input.NetBuyPriceVolumeAdjustmentEnergy)
                ) && 
                (
                    this.NetBuyPriceVolumeAdjustmentSystem == input.NetBuyPriceVolumeAdjustmentSystem ||
                    this.NetBuyPriceVolumeAdjustmentSystem.Equals(input.NetBuyPriceVolumeAdjustmentSystem)
                ) && 
                (
                    this.BuyPricePriceAdjustment == input.BuyPricePriceAdjustment ||
                    this.BuyPricePriceAdjustment.Equals(input.BuyPricePriceAdjustment)
                ) && 
                (
                    this.NetSellPriceCostAdjustmentEnergy == input.NetSellPriceCostAdjustmentEnergy ||
                    this.NetSellPriceCostAdjustmentEnergy.Equals(input.NetSellPriceCostAdjustmentEnergy)
                ) && 
                (
                    this.NetSellPriceVolumeAdjustmentEnergy == input.NetSellPriceVolumeAdjustmentEnergy ||
                    this.NetSellPriceVolumeAdjustmentEnergy.Equals(input.NetSellPriceVolumeAdjustmentEnergy)
                ) && 
                (
                    this.NetSellPriceVolumeAdjustmentSystem == input.NetSellPriceVolumeAdjustmentSystem ||
                    this.NetSellPriceVolumeAdjustmentSystem.Equals(input.NetSellPriceVolumeAdjustmentSystem)
                ) && 
                (
                    this.SellPricePriceAdjustment == input.SellPricePriceAdjustment ||
                    this.SellPricePriceAdjustment.Equals(input.SellPricePriceAdjustment)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StartTime != null)
                {
                    hashCode = (hashCode * 59) + this.StartTime.GetHashCode();
                }
                if (this.SettlementDate != null)
                {
                    hashCode = (hashCode * 59) + this.SettlementDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SettlementPeriod.GetHashCode();
                hashCode = (hashCode * 59) + this.NetBuyPriceCostAdjustmentEnergy.GetHashCode();
                hashCode = (hashCode * 59) + this.NetBuyPriceVolumeAdjustmentEnergy.GetHashCode();
                hashCode = (hashCode * 59) + this.NetBuyPriceVolumeAdjustmentSystem.GetHashCode();
                hashCode = (hashCode * 59) + this.BuyPricePriceAdjustment.GetHashCode();
                hashCode = (hashCode * 59) + this.NetSellPriceCostAdjustmentEnergy.GetHashCode();
                hashCode = (hashCode * 59) + this.NetSellPriceVolumeAdjustmentEnergy.GetHashCode();
                hashCode = (hashCode * 59) + this.NetSellPriceVolumeAdjustmentSystem.GetHashCode();
                hashCode = (hashCode * 59) + this.SellPricePriceAdjustment.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
