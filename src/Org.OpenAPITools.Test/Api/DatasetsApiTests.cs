/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DatasetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DatasetsApiTests : IDisposable
    {
        private DatasetsApi instance;

        public DatasetsApiTests()
        {
            instance = new DatasetsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DatasetsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DatasetsApi
            //Assert.IsType<DatasetsApi>(instance);
        }

        /// <summary>
        /// Test DatasetsABUCGet
        /// </summary>
        [Fact]
        public void DatasetsABUCGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsABUCGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsABUCStreamGet
        /// </summary>
        [Fact]
        public void DatasetsABUCStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsABUCStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsAbucDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsAGPTGet
        /// </summary>
        [Fact]
        public void DatasetsAGPTGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsAGPTGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsAGPTStreamGet
        /// </summary>
        [Fact]
        public void DatasetsAGPTStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsAGPTStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualAggregatedGenerationPerTypeDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsAGWSGet
        /// </summary>
        [Fact]
        public void DatasetsAGWSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsAGWSGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsAGWSStreamGet
        /// </summary>
        [Fact]
        public void DatasetsAGWSStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsAGWSStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationWindSolarDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsATLGet
        /// </summary>
        [Fact]
        public void DatasetsATLGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsATLGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsATLStreamGet
        /// </summary>
        [Fact]
        public void DatasetsATLStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsATLStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualTotalLoadPerBiddingZoneDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsB1610Get
        /// </summary>
        [Fact]
        public void DatasetsB1610GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime settlementDate = null;
            //int settlementPeriod = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsB1610Get(settlementDate, settlementPeriod, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>(response);
        }

        /// <summary>
        /// Test DatasetsB1610StreamGet
        /// </summary>
        [Fact]
        public void DatasetsB1610StreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsB1610StreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsActualGenerationOutputPerGenerationUnitDatasetResponse>>(response);
        }

        /// <summary>
        /// Test DatasetsBOALFGet
        /// </summary>
        [Fact]
        public void DatasetsBOALFGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsBOALFGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>(response);
        }

        /// <summary>
        /// Test DatasetsBOALFStreamGet
        /// </summary>
        [Fact]
        public void DatasetsBOALFStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsBOALFStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferAcceptanceLevelDatasetResponse>>(response);
        }

        /// <summary>
        /// Test DatasetsBODGet
        /// </summary>
        [Fact]
        public void DatasetsBODGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsBODGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>(response);
        }

        /// <summary>
        /// Test DatasetsBODStreamGet
        /// </summary>
        [Fact]
        public void DatasetsBODStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsBODStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsBidOfferDatasetResponse>>(response);
        }

        /// <summary>
        /// Test DatasetsCCMGet
        /// </summary>
        [Fact]
        public void DatasetsCCMGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsCCMGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsCCMStreamGet
        /// </summary>
        [Fact]
        public void DatasetsCCMStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsCCMStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsCostsOfCongestionManagementDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsCDNGet
        /// </summary>
        [Fact]
        public void DatasetsCDNGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? bscPartyId = null;
            //string? format = null;
            //var response = instance.DatasetsCDNGet(publishDateTimeFrom, publishDateTimeTo, bscPartyId, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>(response);
        }

        /// <summary>
        /// Test DatasetsCDNStreamGet
        /// </summary>
        [Fact]
        public void DatasetsCDNStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? bscPartyId = null;
            //var response = instance.DatasetsCDNStreamGet(publishDateTimeFrom, publishDateTimeTo, bscPartyId);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsCreditDefaultNoticeDatasetResponse>>(response);
        }

        /// <summary>
        /// Test DatasetsDAGGet
        /// </summary>
        [Fact]
        public void DatasetsDAGGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsDAGGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsDAGStreamGet
        /// </summary>
        [Fact]
        public void DatasetsDAGStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsDAGStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadAggregatedGenerationDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsDATLGet
        /// </summary>
        [Fact]
        public void DatasetsDATLGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsDATLGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsDATLStreamGet
        /// </summary>
        [Fact]
        public void DatasetsDATLStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsDATLStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadTotalLoadPerBiddingZoneDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsDCIGet
        /// </summary>
        [Fact]
        public void DatasetsDCIGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsDCIGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsDCIStreamGet
        /// </summary>
        [Fact]
        public void DatasetsDCIStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsDCIStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesMiscDatasetRowsDemandControlInstructionDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsDGWSGet
        /// </summary>
        [Fact]
        public void DatasetsDGWSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsDGWSGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsDGWSStreamGet
        /// </summary>
        [Fact]
        public void DatasetsDGWSStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsDGWSStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsDayAheadGenerationForWindAndSolarDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsDISBSADGet
        /// </summary>
        [Fact]
        public void DatasetsDISBSADGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //string? format = null;
            //var response = instance.DatasetsDISBSADGet(from, to, settlementPeriodFrom, settlementPeriodTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>(response);
        }

        /// <summary>
        /// Test DatasetsDISBSADStreamGet
        /// </summary>
        [Fact]
        public void DatasetsDISBSADStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //var response = instance.DatasetsDISBSADStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsDisaggregatedBalancingServicesAdjustmentData>>(response);
        }

        /// <summary>
        /// Test DatasetsFOU2T14DGet
        /// </summary>
        [Fact]
        public void DatasetsFOU2T14DGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDate = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<string>? biddingZone = null;
            //bool? interconnector = null;
            //string? format = null;
            //var response = instance.DatasetsFOU2T14DGet(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, biddingZone, interconnector, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeDaily>(response);
        }

        /// <summary>
        /// Test DatasetsFOU2T3YWGet
        /// </summary>
        [Fact]
        public void DatasetsFOU2T3YWGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDate = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<int>? week = null;
            //List<int>? year = null;
            //List<string>? biddingZone = null;
            //bool? interconnector = null;
            //string? format = null;
            //var response = instance.DatasetsFOU2T3YWGet(fuelType, publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, biddingZone, interconnector, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByFuelTypeWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsFREQGet
        /// </summary>
        [Fact]
        public void DatasetsFREQGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? measurementDateTimeFrom = null;
            //DateTime? measurementDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsFREQGet(measurementDateTimeFrom, measurementDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>(response);
        }

        /// <summary>
        /// Test DatasetsFREQStreamGet
        /// </summary>
        [Fact]
        public void DatasetsFREQStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? measurementDateTimeFrom = null;
            //DateTime? measurementDateTimeTo = null;
            //var response = instance.DatasetsFREQStreamGet(measurementDateTimeFrom, measurementDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesMiscDatasetRowsSystemFrequency>>(response);
        }

        /// <summary>
        /// Test DatasetsFUELHHGet
        /// </summary>
        [Fact]
        public void DatasetsFUELHHGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //DateTime? settlementDateFrom = null;
            //DateTime? settlementDateTo = null;
            //List<int>? settlementPeriod = null;
            //List<string>? fuelType = null;
            //string? format = null;
            //var response = instance.DatasetsFUELHHGet(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>(response);
        }

        /// <summary>
        /// Test DatasetsFUELHHStreamGet
        /// </summary>
        [Fact]
        public void DatasetsFUELHHStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //DateTime? settlementDateFrom = null;
            //DateTime? settlementDateTo = null;
            //List<int>? settlementPeriod = null;
            //List<string>? fuelType = null;
            //var response = instance.DatasetsFUELHHStreamGet(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>(response);
        }

        /// <summary>
        /// Test DatasetsFUELINSTGet
        /// </summary>
        [Fact]
        public void DatasetsFUELINSTGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //DateTime? settlementDateFrom = null;
            //DateTime? settlementDateTo = null;
            //List<int>? settlementPeriod = null;
            //List<string>? fuelType = null;
            //string? format = null;
            //var response = instance.DatasetsFUELINSTGet(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>(response);
        }

        /// <summary>
        /// Test DatasetsFUELINSTStreamGet
        /// </summary>
        [Fact]
        public void DatasetsFUELINSTStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //DateTime? settlementDateFrom = null;
            //DateTime? settlementDateTo = null;
            //List<int>? settlementPeriod = null;
            //List<string>? fuelType = null;
            //var response = instance.DatasetsFUELINSTStreamGet(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, fuelType);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsAugmentedOutturnData>>(response);
        }

        /// <summary>
        /// Test DatasetsIGCAGet
        /// </summary>
        [Fact]
        public void DatasetsIGCAGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsIGCAGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsIGCAStreamGet
        /// </summary>
        [Fact]
        public void DatasetsIGCAStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsIGCAStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsIgcaDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsIMBALNGCGet
        /// </summary>
        [Fact]
        public void DatasetsIMBALNGCGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsIMBALNGCGet(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>(response);
        }

        /// <summary>
        /// Test DatasetsIMBALNGCStreamGet
        /// </summary>
        [Fact]
        public void DatasetsIMBALNGCStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsIMBALNGCStreamGet(boundary, publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedImbalance>>(response);
        }

        /// <summary>
        /// Test DatasetsINDDEMGet
        /// </summary>
        [Fact]
        public void DatasetsINDDEMGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsINDDEMGet(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>(response);
        }

        /// <summary>
        /// Test DatasetsINDDEMStreamGet
        /// </summary>
        [Fact]
        public void DatasetsINDDEMStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsINDDEMStreamGet(boundary, publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedDemand>>(response);
        }

        /// <summary>
        /// Test DatasetsINDGENGet
        /// </summary>
        [Fact]
        public void DatasetsINDGENGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsINDGENGet(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>(response);
        }

        /// <summary>
        /// Test DatasetsINDGENStreamGet
        /// </summary>
        [Fact]
        public void DatasetsINDGENStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsINDGENStreamGet(boundary, publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedGeneration>>(response);
        }

        /// <summary>
        /// Test DatasetsINDODGet
        /// </summary>
        [Fact]
        public void DatasetsINDODGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsINDODGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsINDODStreamGet
        /// </summary>
        [Fact]
        public void DatasetsINDODStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsINDODStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandOutturnDatasetRowsIndodDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsINDOGet
        /// </summary>
        [Fact]
        public void DatasetsINDOGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsINDOGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnNational>(response);
        }

        /// <summary>
        /// Test DatasetsITSDOGet
        /// </summary>
        [Fact]
        public void DatasetsITSDOGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsITSDOGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandOutturnDatasetRowsDemandOutturnTransmission>(response);
        }

        /// <summary>
        /// Test DatasetsLOLPDRMGet
        /// </summary>
        [Fact]
        public void DatasetsLOLPDRMGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsLOLPDRMGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>(response);
        }

        /// <summary>
        /// Test DatasetsLOLPDRMStreamGet
        /// </summary>
        [Fact]
        public void DatasetsLOLPDRMStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsLOLPDRMStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesMiscDatasetRowsLossOfLoadProbabilityDeratedMarginData>>(response);
        }

        /// <summary>
        /// Test DatasetsMATLGet
        /// </summary>
        [Fact]
        public void DatasetsMATLGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsMATLGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsMATLStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMATLStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsMATLStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsMonthAheadTotalLoadPerBiddingZoneDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsMDPGet
        /// </summary>
        [Fact]
        public void DatasetsMDPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMDPGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>(response);
        }

        /// <summary>
        /// Test DatasetsMDPStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMDPStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMDPStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMaxData>>(response);
        }

        /// <summary>
        /// Test DatasetsMDVGet
        /// </summary>
        [Fact]
        public void DatasetsMDVGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMDVGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>(response);
        }

        /// <summary>
        /// Test DatasetsMDVStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMDVStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMDVStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryVolumeMaxData>>(response);
        }

        /// <summary>
        /// Test DatasetsMELNGCGet
        /// </summary>
        [Fact]
        public void DatasetsMELNGCGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsMELNGCGet(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>(response);
        }

        /// <summary>
        /// Test DatasetsMELNGCStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMELNGCStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsMELNGCStreamGet(boundary, publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesIndicatedForecastDatasetRowsIndicatedMargin>>(response);
        }

        /// <summary>
        /// Test DatasetsMELSGet
        /// </summary>
        [Fact]
        public void DatasetsMELSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMELSGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>(response);
        }

        /// <summary>
        /// Test DatasetsMELSStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMELSStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMELSStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>(response);
        }

        /// <summary>
        /// Test DatasetsMIDGet
        /// </summary>
        [Fact]
        public void DatasetsMIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? dataProviders = null;
            //string? format = null;
            //var response = instance.DatasetsMIDGet(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>(response);
        }

        /// <summary>
        /// Test DatasetsMIDStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMIDStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? dataProviders = null;
            //var response = instance.DatasetsMIDStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, dataProviders);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsMarketIndexDatasetResponse>>(response);
        }

        /// <summary>
        /// Test DatasetsMILSGet
        /// </summary>
        [Fact]
        public void DatasetsMILSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMILSGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>(response);
        }

        /// <summary>
        /// Test DatasetsMILSStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMILSStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMILSStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsDeliveryLimitMaxData>>(response);
        }

        /// <summary>
        /// Test DatasetsMNZTGet
        /// </summary>
        [Fact]
        public void DatasetsMNZTGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMNZTGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>(response);
        }

        /// <summary>
        /// Test DatasetsMNZTStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMNZTStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMNZTStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>(response);
        }

        /// <summary>
        /// Test DatasetsMZTGet
        /// </summary>
        [Fact]
        public void DatasetsMZTGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsMZTGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>(response);
        }

        /// <summary>
        /// Test DatasetsMZTStreamGet
        /// </summary>
        [Fact]
        public void DatasetsMZTStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsMZTStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsDeliveryPeriodMinData>>(response);
        }

        /// <summary>
        /// Test DatasetsMetadataLatestGet
        /// </summary>
        [Fact]
        public void DatasetsMetadataLatestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? format = null;
            //var response = instance.DatasetsMetadataLatestGet(format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesReferenceDatasetMetadataLatestRow>(response);
        }

        /// <summary>
        /// Test DatasetsNDFDGet
        /// </summary>
        [Fact]
        public void DatasetsNDFDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsNDFDGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>(response);
        }

        /// <summary>
        /// Test DatasetsNDFDStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNDFDStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsNDFDStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDaily>>(response);
        }

        /// <summary>
        /// Test DatasetsNDFGet
        /// </summary>
        [Fact]
        public void DatasetsNDFGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsNDFGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>(response);
        }

        /// <summary>
        /// Test DatasetsNDFStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNDFStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsNDFStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalDayAhead>>(response);
        }

        /// <summary>
        /// Test DatasetsNDFWGet
        /// </summary>
        [Fact]
        public void DatasetsNDFWGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsNDFWGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsNDFWStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNDFWStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsNDFWStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastNationalWeekly>>(response);
        }

        /// <summary>
        /// Test DatasetsNDZGet
        /// </summary>
        [Fact]
        public void DatasetsNDZGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsNDZGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>(response);
        }

        /// <summary>
        /// Test DatasetsNDZStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNDZStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsNDZStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>(response);
        }

        /// <summary>
        /// Test DatasetsNETBSADGet
        /// </summary>
        [Fact]
        public void DatasetsNETBSADGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //string? format = null;
            //var response = instance.DatasetsNETBSADGet(from, to, settlementPeriodFrom, settlementPeriodTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>(response);
        }

        /// <summary>
        /// Test DatasetsNETBSADStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNETBSADStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //var response = instance.DatasetsNETBSADStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsNetBalancingServicesAdjustmentData>>(response);
        }

        /// <summary>
        /// Test DatasetsNONBMGet
        /// </summary>
        [Fact]
        public void DatasetsNONBMGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //string? format = null;
            //var response = instance.DatasetsNONBMGet(from, to, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>(response);
        }

        /// <summary>
        /// Test DatasetsNONBMStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNONBMStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //var response = instance.DatasetsNONBMStreamGet(from, to);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsNonBmStorData>>(response);
        }

        /// <summary>
        /// Test DatasetsNOU2T14DGet
        /// </summary>
        [Fact]
        public void DatasetsNOU2T14DGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDate = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsNOU2T14DGet(publishDate, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityDaily>(response);
        }

        /// <summary>
        /// Test DatasetsNOU2T3YWGet
        /// </summary>
        [Fact]
        public void DatasetsNOU2T3YWGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDate = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<int>? week = null;
            //List<int>? year = null;
            //string? format = null;
            //var response = instance.DatasetsNOU2T3YWGet(publishDate, publishDateTimeFrom, publishDateTimeTo, week, year, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsNTBGet
        /// </summary>
        [Fact]
        public void DatasetsNTBGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsNTBGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>(response);
        }

        /// <summary>
        /// Test DatasetsNTBStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNTBStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsNTBStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>(response);
        }

        /// <summary>
        /// Test DatasetsNTOGet
        /// </summary>
        [Fact]
        public void DatasetsNTOGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsNTOGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>(response);
        }

        /// <summary>
        /// Test DatasetsNTOStreamGet
        /// </summary>
        [Fact]
        public void DatasetsNTOStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsNTOStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsNoticeData>>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMF3Y2Get
        /// </summary>
        [Fact]
        public void DatasetsOCNMF3Y2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsOCNMF3Y2Get(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMF3Y2StreamGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMF3Y2StreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsOCNMF3Y2StreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginWeekly>>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMF3YGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMF3YGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsOCNMF3YGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMF3YStreamGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMF3YStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsOCNMF3YStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusWeekly>>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMFD2Get
        /// </summary>
        [Fact]
        public void DatasetsOCNMFD2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsOCNMFD2Get(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMFD2StreamGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMFD2StreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsOCNMFD2StreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesForecastMarginDatasetRowsForecastMarginDaily>>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMFDGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMFDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsOCNMFDGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>(response);
        }

        /// <summary>
        /// Test DatasetsOCNMFDStreamGet
        /// </summary>
        [Fact]
        public void DatasetsOCNMFDStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsOCNMFDStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesForecastSurplusDatasetRowsForecastSurplusDaily>>(response);
        }

        /// <summary>
        /// Test DatasetsPNGet
        /// </summary>
        [Fact]
        public void DatasetsPNGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime settlementDate = null;
            //int? settlementPeriod = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsPNGet(settlementDate, settlementPeriod, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>(response);
        }

        /// <summary>
        /// Test DatasetsPNStreamGet
        /// </summary>
        [Fact]
        public void DatasetsPNStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsPNStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>(response);
        }

        /// <summary>
        /// Test DatasetsQASGet
        /// </summary>
        [Fact]
        public void DatasetsQASGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsQASGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>(response);
        }

        /// <summary>
        /// Test DatasetsQASStreamGet
        /// </summary>
        [Fact]
        public void DatasetsQASStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsQASStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDatasetRowsBalancingServicesVolumeData>>(response);
        }

        /// <summary>
        /// Test DatasetsQPNGet
        /// </summary>
        [Fact]
        public void DatasetsQPNGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime settlementDate = null;
            //int? settlementPeriod = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsQPNGet(settlementDate, settlementPeriod, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>(response);
        }

        /// <summary>
        /// Test DatasetsQPNStreamGet
        /// </summary>
        [Fact]
        public void DatasetsQPNStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsQPNStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingPhysicalDatasetRowsPhysicalNotificationData>>(response);
        }

        /// <summary>
        /// Test DatasetsRDREGet
        /// </summary>
        [Fact]
        public void DatasetsRDREGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsRDREGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>(response);
        }

        /// <summary>
        /// Test DatasetsRDREStreamGet
        /// </summary>
        [Fact]
        public void DatasetsRDREStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsRDREStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicRateData>>(response);
        }

        /// <summary>
        /// Test DatasetsRDRIGet
        /// </summary>
        [Fact]
        public void DatasetsRDRIGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsRDRIGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>(response);
        }

        /// <summary>
        /// Test DatasetsRDRIStreamGet
        /// </summary>
        [Fact]
        public void DatasetsRDRIStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsRDRIStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicRateData>>(response);
        }

        /// <summary>
        /// Test DatasetsREMITGet
        /// </summary>
        [Fact]
        public void DatasetsREMITGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsREMITGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>(response);
        }

        /// <summary>
        /// Test DatasetsREMITStreamGet
        /// </summary>
        [Fact]
        public void DatasetsREMITStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsREMITStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyRemitDatasetRowsRemitMessage>>(response);
        }

        /// <summary>
        /// Test DatasetsRUREGet
        /// </summary>
        [Fact]
        public void DatasetsRUREGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsRUREGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>(response);
        }

        /// <summary>
        /// Test DatasetsRUREStreamGet
        /// </summary>
        [Fact]
        public void DatasetsRUREStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsRUREStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicRateData>>(response);
        }

        /// <summary>
        /// Test DatasetsRURIGet
        /// </summary>
        [Fact]
        public void DatasetsRURIGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsRURIGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicRateData>(response);
        }

        /// <summary>
        /// Test DatasetsRURIStreamGet
        /// </summary>
        [Fact]
        public void DatasetsRURIStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //int? settlementPeriodFrom = null;
            //int? settlementPeriodTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsRURIStreamGet(from, to, settlementPeriodFrom, settlementPeriodTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicRateData>>(response);
        }

        /// <summary>
        /// Test DatasetsSELGet
        /// </summary>
        [Fact]
        public void DatasetsSELGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsSELGet(from, to, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>(response);
        }

        /// <summary>
        /// Test DatasetsSELStreamGet
        /// </summary>
        [Fact]
        public void DatasetsSELStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsSELStreamGet(from, to, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>(response);
        }

        /// <summary>
        /// Test DatasetsSILGet
        /// </summary>
        [Fact]
        public void DatasetsSILGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsSILGet(from, to, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>(response);
        }

        /// <summary>
        /// Test DatasetsSILStreamGet
        /// </summary>
        [Fact]
        public void DatasetsSILStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? from = null;
            //DateTime? to = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsSILStreamGet(from, to, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesBalancingDynamicDatasetRowsStablePortageLimitData>>(response);
        }

        /// <summary>
        /// Test DatasetsSYSWARNGet
        /// </summary>
        [Fact]
        public void DatasetsSYSWARNGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsSYSWARNGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>(response);
        }

        /// <summary>
        /// Test DatasetsSYSWARNStreamGet
        /// </summary>
        [Fact]
        public void DatasetsSYSWARNStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsSYSWARNStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesMiscDatasetRowsSystemWarningsData>>(response);
        }

        /// <summary>
        /// Test DatasetsTEMPGet
        /// </summary>
        [Fact]
        public void DatasetsTEMPGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsTEMPGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesMiscDatasetRowsTemperatureData>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFDGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsTSDFDGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFDStreamGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFDStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsTSDFDStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDaily>>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsTSDFGet(boundary, publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFStreamGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsTSDFStreamGet(boundary, publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionDayAhead>>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFWGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFWGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsTSDFWGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsTSDFWStreamGet
        /// </summary>
        [Fact]
        public void DatasetsTSDFWStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsTSDFWStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesDemandForecastDatasetRowsDemandForecastTransmissionWeekly>>(response);
        }

        /// <summary>
        /// Test DatasetsUOU2T14DGet
        /// </summary>
        [Fact]
        public void DatasetsUOU2T14DGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsUOU2T14DGet(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>(response);
        }

        /// <summary>
        /// Test DatasetsUOU2T14DStreamGet
        /// </summary>
        [Fact]
        public void DatasetsUOU2T14DStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsUOU2T14DStreamGet(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitDaily>>(response);
        }

        /// <summary>
        /// Test DatasetsUOU2T3YWGet
        /// </summary>
        [Fact]
        public void DatasetsUOU2T3YWGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<string>? bmUnit = null;
            //string? format = null;
            //var response = instance.DatasetsUOU2T3YWGet(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>(response);
        }

        /// <summary>
        /// Test DatasetsUOU2T3YWStreamGet
        /// </summary>
        [Fact]
        public void DatasetsUOU2T3YWStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //List<string>? bmUnit = null;
            //var response = instance.DatasetsUOU2T3YWStreamGet(fuelType, publishDateTimeFrom, publishDateTimeTo, bmUnit);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsAvailabilityByBmUnitWeekly>>(response);
        }

        /// <summary>
        /// Test DatasetsWATLGet
        /// </summary>
        [Fact]
        public void DatasetsWATLGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsWATLGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsWATLStreamGet
        /// </summary>
        [Fact]
        public void DatasetsWATLStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsWATLStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsWeekAheadTotalLoadPerBiddingZoneDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsWINDFORGet
        /// </summary>
        [Fact]
        public void DatasetsWINDFORGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsWINDFORGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>(response);
        }

        /// <summary>
        /// Test DatasetsWINDFORStreamGet
        /// </summary>
        [Fact]
        public void DatasetsWINDFORStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //var response = instance.DatasetsWINDFORStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationDatasetRowsWindGenerationForecast>>(response);
        }

        /// <summary>
        /// Test DatasetsYAFMGet
        /// </summary>
        [Fact]
        public void DatasetsYAFMGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsYAFMGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsYAFMStreamGet
        /// </summary>
        [Fact]
        public void DatasetsYAFMStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsYAFMStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadForecastMarginDatasetRow>>(response);
        }

        /// <summary>
        /// Test DatasetsYATLGet
        /// </summary>
        [Fact]
        public void DatasetsYATLGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //string? format = null;
            //var response = instance.DatasetsYATLGet(publishDateTimeFrom, publishDateTimeTo, format);
            //Assert.IsType<InsightsApiModelsResponsesDatasetResponse1InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>(response);
        }

        /// <summary>
        /// Test DatasetsYATLStreamGet
        /// </summary>
        [Fact]
        public void DatasetsYATLStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishDateTimeFrom = null;
            //DateTime publishDateTimeTo = null;
            //var response = instance.DatasetsYATLStreamGet(publishDateTimeFrom, publishDateTimeTo);
            //Assert.IsType<List<InsightsApiModelsResponsesTransparencyDatasetRowsYearAheadTotalLoadPerBiddingZoneDatasetRow>>(response);
        }
    }
}
