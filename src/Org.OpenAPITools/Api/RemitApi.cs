/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRemitApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Remit bulk data by Message IDs
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITGet(List<int> messageId, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit bulk data by Message IDs
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITGetWithHttpInfo(List<int> messageId, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Remit list message identifiers by event
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITListByEventGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit list message identifiers by event
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Remit list message identifiers by event stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventStreamGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0);

        /// <summary>
        /// Remit list message identifiers by event stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventStreamGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0);
        /// <summary>
        /// Remit list message identifiers by publish time
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITListByPublishGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit list message identifiers by publish time
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Remit list message identifiers by publish time stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishStreamGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0);

        /// <summary>
        /// Remit list message identifiers by publish time stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishStreamGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0);
        /// <summary>
        /// Remit data by Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides a REMIT message based on a given Message ID.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITMessageIdGet(int messageId, string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit data by Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides a REMIT message based on a given Message ID.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITMessageIdGetWithHttpInfo(int messageId, string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Remit message revisions by MRID or Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITRevisionsGet(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit message revisions by MRID or Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITRevisionsGetWithHttpInfo(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0);
        /// <summary>
        /// Remit data by MRID
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITSearchGet(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0);

        /// <summary>
        /// Remit data by MRID
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITSearchGetWithHttpInfo(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRemitApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Remit bulk data by Message IDs
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITGetAsync(List<int> messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit bulk data by Message IDs
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITGetWithHttpInfoAsync(List<int> messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit list message identifiers by event
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit list message identifiers by event
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit list message identifiers by event stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventStreamGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit list message identifiers by event stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>> REMITListByEventStreamGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit list message identifiers by publish time
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit list message identifiers by publish time
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit list message identifiers by publish time stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishStreamGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit list message identifiers by publish time stream
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>> REMITListByPublishStreamGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit data by Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides a REMIT message based on a given Message ID.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITMessageIdGetAsync(int messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit data by Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides a REMIT message based on a given Message ID.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITMessageIdGetWithHttpInfoAsync(int messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit message revisions by MRID or Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITRevisionsGetAsync(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit message revisions by MRID or Message ID
        /// </summary>
        /// <remarks>
        /// This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITRevisionsGetWithHttpInfoAsync(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remit data by MRID
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITSearchGetAsync(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remit data by MRID
        /// </summary>
        /// <remarks>
        /// This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        System.Threading.Tasks.Task<ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITSearchGetWithHttpInfoAsync(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRemitApi : IRemitApiSync, IRemitApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RemitApi : IRemitApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RemitApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RemitApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RemitApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RemitApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RemitApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RemitApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RemitApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public RemitApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Remit bulk data by Message IDs This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITGet(List<int> messageId, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = REMITGetWithHttpInfo(messageId, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit bulk data by Message IDs This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITGetWithHttpInfo(List<int> messageId, string? format = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'messageId' is set
            if (messageId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageId' when calling RemitApi->REMITGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "messageId", messageId));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit bulk data by Message IDs This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITGetAsync(List<int> messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = await REMITGetWithHttpInfoAsync(messageId, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit bulk data by Message IDs This endpoint provides one or more REMIT messages based on the given Message IDs.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITGetWithHttpInfoAsync(List<int> messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'messageId' is set
            if (messageId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageId' when calling RemitApi->REMITGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "messageId", messageId));
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by event This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITListByEventGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = REMITListByEventGetWithHttpInfo(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by event This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByEventGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/list/by-event", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByEventGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by event This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = await REMITListByEventGetWithHttpInfoAsync(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by event This endpoint provides a list of REMIT message identifiers based on the event start time, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByEventGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/list/by-event", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByEventGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by event stream This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByEventStreamGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> localVarResponse = REMITListByEventStreamGetWithHttpInfo(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by event stream This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventStreamGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByEventStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>("/REMIT/list/by-event/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByEventStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by event stream This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByEventStreamGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> localVarResponse = await REMITListByEventStreamGetWithHttpInfoAsync(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by event stream This endpoint provides a list of REMIT message identifiers based on the event start, end time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>> REMITListByEventStreamGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByEventStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>("/REMIT/list/by-event/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByEventStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by publish time This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITListByPublishGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = REMITListByPublishGetWithHttpInfo(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by publish time This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByPublishGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/list/by-publish", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByPublishGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by publish time This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = await REMITListByPublishGetWithHttpInfoAsync(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by publish time This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByPublishGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/list/by-publish", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByPublishGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by publish time stream This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITListByPublishStreamGet(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> localVarResponse = REMITListByPublishStreamGetWithHttpInfo(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by publish time stream This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishStreamGetWithHttpInfo(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByPublishStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>("/REMIT/list/by-publish/stream", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByPublishStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit list message identifiers by publish time stream This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;</returns>
        public async System.Threading.Tasks.Task<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITListByPublishStreamGetAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> localVarResponse = await REMITListByPublishStreamGetWithHttpInfoAsync(from, to, participantId, assetId, messageType, unavailabilityType, eventType, fuelType, latestRevisionOnly, profileOnly, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit list message identifiers by publish time stream This endpoint provides a list of REMIT message identifiers based on the publish time and other optional parameters.                - Filtering by LatestRevisionOnly (default &#x3D; true):     if true, include only the latest revision of each message.                - Filtering by ProfileOnly (default &#x3D; false):      if true, include only messages with an outage profile.                This endpoint has an optimised JSON payload and is aimed at frequent requests for the Remit list message identifiers data.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="participantId"> (optional)</param>
        /// <param name="assetId"> (optional)</param>
        /// <param name="messageType"> (optional)</param>
        /// <param name="unavailabilityType"> (optional)</param>
        /// <param name="eventType"> (optional)</param>
        /// <param name="fuelType"> (optional)</param>
        /// <param name="latestRevisionOnly"> (optional)</param>
        /// <param name="profileOnly"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>> REMITListByPublishStreamGetWithHttpInfoAsync(DateTime from, DateTime to, string? participantId = default(string?), string? assetId = default(string?), string? messageType = default(string?), string? unavailabilityType = default(string?), List<string>? eventType = default(List<string>?), List<string>? fuelType = default(List<string>?), bool? latestRevisionOnly = default(bool?), bool? profileOnly = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "from", from));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "to", to));
            if (participantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "participantId", participantId));
            }
            if (assetId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "assetId", assetId));
            }
            if (messageType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageType", messageType));
            }
            if (unavailabilityType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "unavailabilityType", unavailabilityType));
            }
            if (eventType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "eventType", eventType));
            }
            if (fuelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "fuelType", fuelType));
            }
            if (latestRevisionOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "latestRevisionOnly", latestRevisionOnly));
            }
            if (profileOnly != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "profileOnly", profileOnly));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITListByPublishStreamGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>>("/REMIT/list/by-publish/stream", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITListByPublishStreamGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit data by Message ID This endpoint provides a REMIT message based on a given Message ID.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITMessageIdGet(int messageId, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = REMITMessageIdGetWithHttpInfo(messageId, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit data by Message ID This endpoint provides a REMIT message based on a given Message ID.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITMessageIdGetWithHttpInfo(int messageId, string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("messageId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageId)); // path parameter
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITMessageIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT/{messageId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITMessageIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit data by Message ID This endpoint provides a REMIT message based on a given Message ID.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITMessageIdGetAsync(int messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = await REMITMessageIdGetWithHttpInfoAsync(messageId, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit data by Message ID This endpoint provides a REMIT message based on a given Message ID.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="messageId"></param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITMessageIdGetWithHttpInfoAsync(int messageId, string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("messageId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageId)); // path parameter
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITMessageIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT/{messageId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITMessageIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit message revisions by MRID or Message ID This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl REMITRevisionsGet(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = REMITRevisionsGetWithHttpInfo(mrid, messageId, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit message revisions by MRID or Message ID This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITRevisionsGetWithHttpInfo(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (mrid != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "mrid", mrid));
            }
            if (messageId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageId", messageId));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITRevisionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/revisions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITRevisionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit message revisions by MRID or Message ID This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> REMITRevisionsGetAsync(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl> localVarResponse = await REMITRevisionsGetWithHttpInfoAsync(mrid, messageId, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit message revisions by MRID or Message ID This endpoint provides all of the REMIT Message Revisions for a given Message Group.  The Message Group can be specified in two ways:  - via an MRID which specifies a unique Message Group  - via a Message ID, as each Message will belong to a unique Message Group
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"> (optional)</param>
        /// <param name="messageId"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>> REMITRevisionsGetWithHttpInfoAsync(string? mrid = default(string?), int? messageId = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (mrid != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "mrid", mrid));
            }
            if (messageId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "messageId", messageId));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITRevisionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageIdentifierWithUrl>("/REMIT/revisions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITRevisionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit data by MRID This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId REMITSearchGet(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = REMITSearchGetWithHttpInfo(mrid, revisionNumber, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit data by MRID This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITSearchGetWithHttpInfo(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'mrid' is set
            if (mrid == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'mrid' when calling RemitApi->REMITSearchGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "mrid", mrid));
            if (revisionNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "revisionNumber", revisionNumber));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITSearchGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT/search", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITSearchGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remit data by MRID This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId</returns>
        public async System.Threading.Tasks.Task<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> REMITSearchGetAsync(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId> localVarResponse = await REMITSearchGetWithHttpInfoAsync(mrid, revisionNumber, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remit data by MRID This endpoint provides one or more REMIT messages based on the given MRID and revision number. If none is given  it returns the REMIT message with the latest revision number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mrid"></param>
        /// <param name="revisionNumber"> (optional)</param>
        /// <param name="format">Response data format. Use json/xml to include metadata. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>> REMITSearchGetWithHttpInfoAsync(string mrid, int? revisionNumber = default(int?), string? format = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'mrid' is set
            if (mrid == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'mrid' when calling RemitApi->REMITSearchGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "mrid", mrid));
            if (revisionNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "revisionNumber", revisionNumber));
            }
            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }

            localVarRequestOptions.Operation = "RemitApi.REMITSearchGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesTransparencyRemitRemitMessageWithId>("/REMIT/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("REMITSearchGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
