/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InsightsApiModelsResponsesTransparencyAgptSummaryData
    /// </summary>
    [DataContract(Name = "Insights.Api.Models.Responses.Transparency.AgptSummaryData")]
    public partial class InsightsApiModelsResponsesTransparencyAgptSummaryData : IEquatable<InsightsApiModelsResponsesTransparencyAgptSummaryData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InsightsApiModelsResponsesTransparencyAgptSummaryData" /> class.
        /// </summary>
        /// <param name="psrType">psrType.</param>
        /// <param name="halfHourUsage">halfHourUsage.</param>
        /// <param name="halfHourPercentage">halfHourPercentage.</param>
        /// <param name="twentyFourHourUsage">twentyFourHourUsage.</param>
        /// <param name="twentyFourHourPercentage">twentyFourHourPercentage.</param>
        public InsightsApiModelsResponsesTransparencyAgptSummaryData(string psrType = default(string), double halfHourUsage = default(double), double halfHourPercentage = default(double), double twentyFourHourUsage = default(double), double twentyFourHourPercentage = default(double))
        {
            this.PsrType = psrType;
            this.HalfHourUsage = halfHourUsage;
            this.HalfHourPercentage = halfHourPercentage;
            this.TwentyFourHourUsage = twentyFourHourUsage;
            this.TwentyFourHourPercentage = twentyFourHourPercentage;
        }

        /// <summary>
        /// Gets or Sets PsrType
        /// </summary>
        [DataMember(Name = "psrType", EmitDefaultValue = true)]
        public string PsrType { get; set; }

        /// <summary>
        /// Gets or Sets HalfHourUsage
        /// </summary>
        [DataMember(Name = "halfHourUsage", EmitDefaultValue = false)]
        public double HalfHourUsage { get; set; }

        /// <summary>
        /// Gets or Sets HalfHourPercentage
        /// </summary>
        [DataMember(Name = "halfHourPercentage", EmitDefaultValue = false)]
        public double HalfHourPercentage { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourHourUsage
        /// </summary>
        [DataMember(Name = "twentyFourHourUsage", EmitDefaultValue = false)]
        public double TwentyFourHourUsage { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourHourPercentage
        /// </summary>
        [DataMember(Name = "twentyFourHourPercentage", EmitDefaultValue = false)]
        public double TwentyFourHourPercentage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InsightsApiModelsResponsesTransparencyAgptSummaryData {\n");
            sb.Append("  PsrType: ").Append(PsrType).Append("\n");
            sb.Append("  HalfHourUsage: ").Append(HalfHourUsage).Append("\n");
            sb.Append("  HalfHourPercentage: ").Append(HalfHourPercentage).Append("\n");
            sb.Append("  TwentyFourHourUsage: ").Append(TwentyFourHourUsage).Append("\n");
            sb.Append("  TwentyFourHourPercentage: ").Append(TwentyFourHourPercentage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InsightsApiModelsResponsesTransparencyAgptSummaryData);
        }

        /// <summary>
        /// Returns true if InsightsApiModelsResponsesTransparencyAgptSummaryData instances are equal
        /// </summary>
        /// <param name="input">Instance of InsightsApiModelsResponsesTransparencyAgptSummaryData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InsightsApiModelsResponsesTransparencyAgptSummaryData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PsrType == input.PsrType ||
                    (this.PsrType != null &&
                    this.PsrType.Equals(input.PsrType))
                ) && 
                (
                    this.HalfHourUsage == input.HalfHourUsage ||
                    this.HalfHourUsage.Equals(input.HalfHourUsage)
                ) && 
                (
                    this.HalfHourPercentage == input.HalfHourPercentage ||
                    this.HalfHourPercentage.Equals(input.HalfHourPercentage)
                ) && 
                (
                    this.TwentyFourHourUsage == input.TwentyFourHourUsage ||
                    this.TwentyFourHourUsage.Equals(input.TwentyFourHourUsage)
                ) && 
                (
                    this.TwentyFourHourPercentage == input.TwentyFourHourPercentage ||
                    this.TwentyFourHourPercentage.Equals(input.TwentyFourHourPercentage)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PsrType != null)
                {
                    hashCode = (hashCode * 59) + this.PsrType.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.HalfHourUsage.GetHashCode();
                hashCode = (hashCode * 59) + this.HalfHourPercentage.GetHashCode();
                hashCode = (hashCode * 59) + this.TwentyFourHourUsage.GetHashCode();
                hashCode = (hashCode * 59) + this.TwentyFourHourPercentage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
