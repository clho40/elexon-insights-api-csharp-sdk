/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DemandForecastApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DemandForecastApiTests : IDisposable
    {
        private DemandForecastApi instance;

        public DemandForecastApiTests()
        {
            instance = new DemandForecastApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DemandForecastApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DemandForecastApi
            //Assert.IsType<DemandForecastApi>(instance);
        }

        /// <summary>
        /// Test ForecastDemandDailyEvolutionGet
        /// </summary>
        [Fact]
        public void ForecastDemandDailyEvolutionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime forecastDate = null;
            //string? format = null;
            //var response = instance.ForecastDemandDailyEvolutionGet(forecastDate, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDaily>(response);
        }

        /// <summary>
        /// Test ForecastDemandDailyGet
        /// </summary>
        [Fact]
        public void ForecastDemandDailyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? format = null;
            //var response = instance.ForecastDemandDailyGet(format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDaily>(response);
        }

        /// <summary>
        /// Test ForecastDemandDailyHistoryGet
        /// </summary>
        [Fact]
        public void ForecastDemandDailyHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishTime = null;
            //string? format = null;
            //var response = instance.ForecastDemandDailyHistoryGet(publishTime, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDaily>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadEarliestGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadEarliestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //string? boundary = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadEarliestGet(from, to, boundary, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDayAhead>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadEarliestStreamGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadEarliestStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //string? boundary = null;
            //var response = instance.ForecastDemandDayAheadEarliestStreamGet(from, to, boundary);
            //Assert.IsType<List<InsightsApiModelsServiceDayAheadDemandForecastRow>>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadEvolutionGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadEvolutionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime settlementDate = null;
            //List<int> settlementPeriod = null;
            //string? boundary = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadEvolutionGet(settlementDate, settlementPeriod, boundary, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDayAhead>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadGet(boundary, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDayAhead>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadHistoryGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishTime = null;
            //string? boundary = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadHistoryGet(publishTime, boundary, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDayAhead>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadLatestGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadLatestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //string? boundary = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadLatestGet(from, to, boundary, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastDayAhead>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadLatestStreamGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadLatestStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime from = null;
            //DateTime to = null;
            //string? boundary = null;
            //var response = instance.ForecastDemandDayAheadLatestStreamGet(from, to, boundary);
            //Assert.IsType<List<InsightsApiModelsServiceDayAheadDemandForecastRow>>(response);
        }

        /// <summary>
        /// Test ForecastDemandDayAheadPeakGet
        /// </summary>
        [Fact]
        public void ForecastDemandDayAheadPeakGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? boundary = null;
            //DateTime? from = null;
            //DateTime? to = null;
            //string? format = null;
            //var response = instance.ForecastDemandDayAheadPeakGet(boundary, from, to, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastPeak>(response);
        }

        /// <summary>
        /// Test ForecastDemandWeeklyEvolutionGet
        /// </summary>
        [Fact]
        public void ForecastDemandWeeklyEvolutionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forecastYear = null;
            //int forecastWeek = null;
            //string? format = null;
            //var response = instance.ForecastDemandWeeklyEvolutionGet(forecastYear, forecastWeek, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastWeekly>(response);
        }

        /// <summary>
        /// Test ForecastDemandWeeklyGet
        /// </summary>
        [Fact]
        public void ForecastDemandWeeklyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? format = null;
            //var response = instance.ForecastDemandWeeklyGet(format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastWeekly>(response);
        }

        /// <summary>
        /// Test ForecastDemandWeeklyHistoryGet
        /// </summary>
        [Fact]
        public void ForecastDemandWeeklyHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime publishTime = null;
            //string? format = null;
            //var response = instance.ForecastDemandWeeklyHistoryGet(publishTime, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesDemandForecastDemandForecastWeekly>(response);
        }
    }
}
