/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing GenerationOutturnApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GenerationOutturnApiTests : IDisposable
    {
        private GenerationOutturnApi instance;

        public GenerationOutturnApiTests()
        {
            instance = new GenerationOutturnApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GenerationOutturnApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GenerationOutturnApi
            //Assert.IsType<GenerationOutturnApi>(instance);
        }

        /// <summary>
        /// Test GenerationOutturnFUELINSTHHCURGet
        /// </summary>
        [Fact]
        public void GenerationOutturnFUELINSTHHCURGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fuelType = null;
            //string? format = null;
            //var response = instance.GenerationOutturnFUELINSTHHCURGet(fuelType, format);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationGenerationByFuelType>>(response);
        }

        /// <summary>
        /// Test GenerationOutturnHalfHourlyInterconnectorGet
        /// </summary>
        [Fact]
        public void GenerationOutturnHalfHourlyInterconnectorGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? publishDateTimeFrom = null;
            //DateTime? publishDateTimeTo = null;
            //DateTime? settlementDateFrom = null;
            //DateTime? settlementDateTo = null;
            //List<int>? settlementPeriod = null;
            //List<string>? interconnectorName = null;
            //string? format = null;
            //var response = instance.GenerationOutturnHalfHourlyInterconnectorGet(publishDateTimeFrom, publishDateTimeTo, settlementDateFrom, settlementDateTo, settlementPeriod, interconnectorName, format);
            //Assert.IsType<InsightsApiModelsResponsesResponseWithMetadata1InsightsApiModelsResponsesGenerationHalfHourlyInterconnectorOutturn>(response);
        }

        /// <summary>
        /// Test GenerationOutturnSummaryGet
        /// </summary>
        [Fact]
        public void GenerationOutturnSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? startTime = null;
            //DateTime? endTime = null;
            //bool? includeNegativeGeneration = null;
            //string? format = null;
            //var response = instance.GenerationOutturnSummaryGet(startTime, endTime, includeNegativeGeneration, format);
            //Assert.IsType<List<InsightsApiModelsResponsesGenerationOutturnGenerationBySettlementPeriod>>(response);
        }
    }
}
