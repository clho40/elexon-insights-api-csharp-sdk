/*
 * Insights.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse
    /// </summary>
    [DataContract(Name = "Insights.Api.Models.Responses.Balancing.CreditDefaultNoticeResponse")]
    public partial class InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse : IEquatable<InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse" /> class.
        /// </summary>
        /// <param name="participantId">participantId.</param>
        /// <param name="participantName">participantName.</param>
        /// <param name="creditDefaultLevel">creditDefaultLevel.</param>
        /// <param name="enteredDefaultSettlementDate">enteredDefaultSettlementDate.</param>
        /// <param name="enteredDefaultSettlementPeriod">enteredDefaultSettlementPeriod.</param>
        /// <param name="clearedDefaultSettlementDate">clearedDefaultSettlementDate.</param>
        /// <param name="clearedDefaultSettlementPeriod">clearedDefaultSettlementPeriod.</param>
        /// <param name="clearedDefaultText">clearedDefaultText.</param>
        public InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse(string participantId = default(string), string participantName = default(string), int creditDefaultLevel = default(int), DateTime enteredDefaultSettlementDate = default(DateTime), int enteredDefaultSettlementPeriod = default(int), DateTime? clearedDefaultSettlementDate = default(DateTime?), int? clearedDefaultSettlementPeriod = default(int?), string clearedDefaultText = default(string))
        {
            this.ParticipantId = participantId;
            this.ParticipantName = participantName;
            this.CreditDefaultLevel = creditDefaultLevel;
            this.EnteredDefaultSettlementDate = enteredDefaultSettlementDate;
            this.EnteredDefaultSettlementPeriod = enteredDefaultSettlementPeriod;
            this.ClearedDefaultSettlementDate = clearedDefaultSettlementDate;
            this.ClearedDefaultSettlementPeriod = clearedDefaultSettlementPeriod;
            this.ClearedDefaultText = clearedDefaultText;
        }

        /// <summary>
        /// Gets or Sets ParticipantId
        /// </summary>
        /// <example>INVE</example>
        [DataMember(Name = "participantId", EmitDefaultValue = true)]
        public string ParticipantId { get; set; }

        /// <summary>
        /// Gets or Sets ParticipantName
        /// </summary>
        /// <example>AMPowerUK Ltd</example>
        [DataMember(Name = "participantName", EmitDefaultValue = true)]
        public string ParticipantName { get; set; }

        /// <summary>
        /// Gets or Sets CreditDefaultLevel
        /// </summary>
        /// <example>2</example>
        [DataMember(Name = "creditDefaultLevel", EmitDefaultValue = false)]
        public int CreditDefaultLevel { get; set; }

        /// <summary>
        /// Gets or Sets EnteredDefaultSettlementDate
        /// </summary>
        /// <example>Sat Jun 25 02:00:00 CEST 2022</example>
        [DataMember(Name = "enteredDefaultSettlementDate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime EnteredDefaultSettlementDate { get; set; }

        /// <summary>
        /// Gets or Sets EnteredDefaultSettlementPeriod
        /// </summary>
        /// <example>3</example>
        [DataMember(Name = "enteredDefaultSettlementPeriod", EmitDefaultValue = false)]
        public int EnteredDefaultSettlementPeriod { get; set; }

        /// <summary>
        /// Gets or Sets ClearedDefaultSettlementDate
        /// </summary>
        /// <example>Sat Jul 02 02:00:00 CEST 2022</example>
        [DataMember(Name = "clearedDefaultSettlementDate", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime? ClearedDefaultSettlementDate { get; set; }

        /// <summary>
        /// Gets or Sets ClearedDefaultSettlementPeriod
        /// </summary>
        /// <example>29</example>
        [DataMember(Name = "clearedDefaultSettlementPeriod", EmitDefaultValue = true)]
        public int? ClearedDefaultSettlementPeriod { get; set; }

        /// <summary>
        /// Gets or Sets ClearedDefaultText
        /// </summary>
        /// <example>Credit Cover Percentage greater than or equal to 90% of Credit Limit (Level 2 Default)</example>
        [DataMember(Name = "clearedDefaultText", EmitDefaultValue = true)]
        public string ClearedDefaultText { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse {\n");
            sb.Append("  ParticipantId: ").Append(ParticipantId).Append("\n");
            sb.Append("  ParticipantName: ").Append(ParticipantName).Append("\n");
            sb.Append("  CreditDefaultLevel: ").Append(CreditDefaultLevel).Append("\n");
            sb.Append("  EnteredDefaultSettlementDate: ").Append(EnteredDefaultSettlementDate).Append("\n");
            sb.Append("  EnteredDefaultSettlementPeriod: ").Append(EnteredDefaultSettlementPeriod).Append("\n");
            sb.Append("  ClearedDefaultSettlementDate: ").Append(ClearedDefaultSettlementDate).Append("\n");
            sb.Append("  ClearedDefaultSettlementPeriod: ").Append(ClearedDefaultSettlementPeriod).Append("\n");
            sb.Append("  ClearedDefaultText: ").Append(ClearedDefaultText).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse);
        }

        /// <summary>
        /// Returns true if InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ParticipantId == input.ParticipantId ||
                    (this.ParticipantId != null &&
                    this.ParticipantId.Equals(input.ParticipantId))
                ) && 
                (
                    this.ParticipantName == input.ParticipantName ||
                    (this.ParticipantName != null &&
                    this.ParticipantName.Equals(input.ParticipantName))
                ) && 
                (
                    this.CreditDefaultLevel == input.CreditDefaultLevel ||
                    this.CreditDefaultLevel.Equals(input.CreditDefaultLevel)
                ) && 
                (
                    this.EnteredDefaultSettlementDate == input.EnteredDefaultSettlementDate ||
                    (this.EnteredDefaultSettlementDate != null &&
                    this.EnteredDefaultSettlementDate.Equals(input.EnteredDefaultSettlementDate))
                ) && 
                (
                    this.EnteredDefaultSettlementPeriod == input.EnteredDefaultSettlementPeriod ||
                    this.EnteredDefaultSettlementPeriod.Equals(input.EnteredDefaultSettlementPeriod)
                ) && 
                (
                    this.ClearedDefaultSettlementDate == input.ClearedDefaultSettlementDate ||
                    (this.ClearedDefaultSettlementDate != null &&
                    this.ClearedDefaultSettlementDate.Equals(input.ClearedDefaultSettlementDate))
                ) && 
                (
                    this.ClearedDefaultSettlementPeriod == input.ClearedDefaultSettlementPeriod ||
                    (this.ClearedDefaultSettlementPeriod != null &&
                    this.ClearedDefaultSettlementPeriod.Equals(input.ClearedDefaultSettlementPeriod))
                ) && 
                (
                    this.ClearedDefaultText == input.ClearedDefaultText ||
                    (this.ClearedDefaultText != null &&
                    this.ClearedDefaultText.Equals(input.ClearedDefaultText))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ParticipantId != null)
                {
                    hashCode = (hashCode * 59) + this.ParticipantId.GetHashCode();
                }
                if (this.ParticipantName != null)
                {
                    hashCode = (hashCode * 59) + this.ParticipantName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.CreditDefaultLevel.GetHashCode();
                if (this.EnteredDefaultSettlementDate != null)
                {
                    hashCode = (hashCode * 59) + this.EnteredDefaultSettlementDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.EnteredDefaultSettlementPeriod.GetHashCode();
                if (this.ClearedDefaultSettlementDate != null)
                {
                    hashCode = (hashCode * 59) + this.ClearedDefaultSettlementDate.GetHashCode();
                }
                if (this.ClearedDefaultSettlementPeriod != null)
                {
                    hashCode = (hashCode * 59) + this.ClearedDefaultSettlementPeriod.GetHashCode();
                }
                if (this.ClearedDefaultText != null)
                {
                    hashCode = (hashCode * 59) + this.ClearedDefaultText.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
